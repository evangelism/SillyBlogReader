<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="http://blogs.msdn.com/utility/FeedStylesheets/rss.xsl" media="screen"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:wfw="http://wellformedweb.org/CommentAPI/"><channel><title>Russian Coding 4 Fun</title><link>http://blogs.msdn.com/b/rucoding4fun/</link><description /><dc:language>en-US</dc:language><generator>Telligent Evolution Platform Developer Build (Build: 5.6.50428.7875)</generator><item><title>Bluetooth, Arduino и Windows 8.1</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/07/23/bluetooth-arduino-and-windows-8-1.aspx</link><pubDate>Wed, 23 Jul 2014 05:48:20 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10544493</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10544493</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/07/23/bluetooth-arduino-and-windows-8-1.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшнее сообщение продолжает коммуникационную серию по Windows 8.1, на этот раз используя Bluetooth c Arduino, благодарность Михаэлу Остеже (Michael Osthege)…&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://code.msdn.microsoft.com/Bluetooth-communication-7130c260"&gt;Связь по Bluetooth между Arduino и Windows 8.1&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;В этом примере вы сможете научиться, как установить последовательный канал связи через Bluetooth между Arduino и приложением Windows 8.1.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Сборка образца&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Чтобы проверить это вам понадобятся &lt;b&gt;Arduino &lt;/b&gt;&lt;b&gt;с&lt;/b&gt;&lt;b&gt; Bluetooth &lt;/b&gt;(например, Arduino Uno R3 и модуль JY-MCU Bluetooth) и устройство &lt;b&gt;Windows 8.1 &lt;/b&gt;&lt;b&gt;с&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;возможностями&lt;/b&gt;&lt;b&gt; Bluetooth&lt;/b&gt;. (Также подойдет Bluetooth-устройство, вставляемое в разъем.)&lt;/p&gt;    &lt;p&gt;Пример предоставляет решение Visual Studio 2013, включающее код приложения для Windows Store и код для Arduino. Код для Arduino можно открыть и с помощью другой IDE, но рекомендуется Visual Studio 2013 с бесплатными расширениями &lt;a href="http://www.visualmicro.com/"&gt;VisualMicro&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Этот пример навеян (и основан) сообщениием Маркоса Перейры (Marcos Pereira) «&lt;a href="http://developer.nokia.com/Community/Wiki/Windows_Phone_8_communicating_with_Arduino_using_Bluetooth"&gt;Реализация в Windows Phone 8 связи с Bluetooth/Arduino&lt;/a&gt;». &lt;a href="http://channel9.msdn.com/Events/Build/2013/3-026"&gt;Обсуждение на конференции Build Эллика Сунга&lt;/a&gt; (Ellick Sung) и относящееся к нему приложение-пример также оказались полезны при переносе кода на WinRT.&lt;/p&gt;    &lt;p&gt;Описание &lt;/p&gt;    &lt;p&gt;Оснастите Arduino модулем &lt;b&gt;Bluetooth&lt;/b&gt;&lt;b&gt;, двумя светодиодами и потенциометром, &lt;/b&gt;как показано на диаграмме:&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3113.clip_5F00_image002_5F00_1BDCD0DD.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0042.clip_5F00_image002_5F00_thumb_5F00_019EF86A.png" width="560" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Связь с модулем Bluetooth выполняется с помощью библиотеки &lt;b&gt;SoftwareSerial&lt;/b&gt;&lt;b&gt;.&lt;/b&gt;&lt;b&gt;h&lt;/b&gt;.&lt;/p&gt;    &lt;p&gt;Приложение Windows 8.1 должно описать возможности последовательной связи по Bluetooth в файле&lt;b&gt; &lt;/b&gt;&lt;b&gt;Package&lt;/b&gt;&lt;b&gt;.&lt;/b&gt;&lt;b&gt;appxmanifest&lt;/b&gt;:&lt;/p&gt;    &lt;p&gt;Чтобы развернуть код Arduino с помощью VisualMicro, щелкните правой клавишей на Project в Solution Explorer и выберите пункт Debug\Start new instance.&lt;/p&gt;    &lt;p&gt;Когда приложение для Windows 8.1 стартует, можно установить соединение и проконтролировать светодиоды, или подписаться на аналоговые входы, как показано в следующем видео: &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;object width="425" height="355"&gt;&lt;param name="movie" value="http://www.youtube.com/v/lhj0aShdcz8&amp;amp;hl=en" /&gt;&lt;param name="wmode" value="transparent" /&gt;&lt;embed src="http://www.youtube.com/v/lhj0aShdcz8&amp;amp;hl=en" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"&gt;&lt;/embed&gt; &lt;/object&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;&lt;a href="http://kuchenzeit.wordpress.com/2013/09/24/bluetooth-communication-between-arduino-and-windows-8-1/"&gt;Связь по Bluetooth между Arduino и Windows 8.1&lt;/a&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Введение&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Недавно, после просмотра &lt;a href="http://www.youtube.com/watch?v=1vB1ZgU2DUs"&gt;этого видео&lt;/a&gt; Маркоса Перейры, посвященного &lt;a href="http://developer.nokia.com/Community/Wiki/Windows_Phone_8_communicating_with_Arduino_using_Bluetooth"&gt;связи между Arduino и Windows Phone 8 по Bluetooth&lt;/a&gt;, я приобрел следующие новые устройства: &lt;/p&gt;    &lt;p&gt;· Arduino Uno R3 в начальном наборе (&lt;a href="http://dx.com/p/x1301-uno-r3-starter-singlechip-set-kit-multicolored-192965"&gt;ссылка&lt;/a&gt;)&lt;/p&gt;    &lt;p&gt;· Модуль JY-MCU Bluetooth (&lt;a href="http://dx.com/p/jy-mcu-arduino-bluetooth-wireless-serial-port-module-104299"&gt;ссылка&lt;/a&gt;)&lt;/p&gt;    &lt;p&gt;· И несколько дополнительных кабелей&lt;/p&gt;    &lt;p&gt;Проблема: У меня еще не было Windows Phone 8 и Windows Phone 7.8 API не поддерживали этот тип связи по Bluetooth.&lt;/p&gt;    &lt;p&gt;Но: У меня был Surface RT и с помощью &lt;b&gt;Windows&lt;/b&gt;&lt;b&gt; 8.1 &lt;/b&gt;&lt;b&gt;the&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;RFCOMM&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;API&lt;/b&gt; можно попробовать установить последовательный канал с Arduino.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Arduino &lt;/b&gt;&lt;b&gt;и&lt;/b&gt;&lt;b&gt; Visual Studio&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Так случилось, что мое искусство программирования ограничено С#, и когда я должен разработать некоторое ПО для Kinect с помощью языка &lt;a href="http://en.wikipedia.org/wiki/Processing_%28programming_language%29"&gt;Processing&lt;/a&gt;, я чуть не сошел с ума. Код для Arduino написан на С++ и стандартная Arduino IDE получена из Processing IDE. К счастью, есть расширение для Visual Studio под названием VisualMicro, которая обеспечивает интуитивно понятную поддержку Arduino для VS2010-VS2013. (Отсутствует для версии Express). &lt;/p&gt;    &lt;p&gt;Можно получить VisualMicro бесплатно по адресу &lt;a href="http://visualmicro.codeplex.com/"&gt;http://visualmicro.codeplex.com/&lt;/a&gt;. Также есть платная версия (&amp;gt;$20) с поддержкой точек останова и отладки.&lt;/p&gt;    &lt;p&gt;Также должна быть установлена Arduino IDE и вы должны указать расширению VisualMicro, где она находится.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Подготовка к кодированию&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В Arduino необходимо загрузить определенный код, чтобы он мог посылать и получать сообщения через Bluetooth. Я создал решение Visual Studio с пустым приложением для Windows 8.1 и новым скетчем Arduino и добавил новый файл заголовка SoftwareSerial.h (рис.2). &lt;a href="http://pastebin.com/8WTpUUAX"&gt;Код SoftwareSerial.h можно найти здесь&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;&lt;/blockquote&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10544493" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Arduino/">Arduino</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Bluetooth/">Bluetooth</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/WIndows+8-1/">WIndows 8.1</category></item><item><title>Домашний сад – приключения с автоматизацией комнатного растениеводства</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/06/11/the-urban-garden-adventures-in-automated-indoor-gardening.aspx</link><pubDate>Wed, 11 Jun 2014 07:38:48 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10533266</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10533266</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/06/11/the-urban-garden-adventures-in-automated-indoor-gardening.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Что вы забыли? Так, когда вы уехали на Build или прилипли к интернет-трансляциям, что-то надо было обязательно сделать… хм… но что?&lt;/p&gt;  &lt;p&gt;Что-то зеленое… Ах да! Растения! Вы забыли полить свои растения!&lt;/p&gt;  &lt;p&gt;Сегодняшний пост может помочь вам следующий раз, когда это случится. Конечно, есть множество низкотехнологичных способов решить задачу, но зачем использовать их, когда можно создать полный аппаратный проект и инфраструктуру для этого!&lt;/p&gt;  &lt;p&gt;&lt;a href="http://forums.netduino.com/index.php?/topic/10367-automated-urban-garden/?hl=%2Burban+%2Bgarden"&gt;&lt;b&gt;Автоматизированный сад в квартире&lt;/b&gt;&lt;/a&gt;&amp;#160;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Наконец-то я перешел к активной части проекта, который хотел выполнить уже давно: автоматизированный городской сад. Мне всегда нравилось домашнее растениеводство, но не хватало мастерства и внимания к деталям, чтобы поддерживать растения живыми. Это прекрасная возможность переложить заботу о растениях на Netduino. &lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6036.clip_5F00_image002_5F00_364AEAA6.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8345.clip_5F00_image002_5F00_thumb_5F00_36DBC8F0.png" width="610" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Cад будет автоматически поливать растения, факультативно используя датчик влажности. Резервуар с водой будет предупреждать вас, когда его надо пополнить. Также будет включаться лампа над растениями, моделируя изменение солнечного света в течение года. Все вместе управляется через Bluetooth и приложение для Android.&lt;/p&gt;    &lt;p&gt;Документация по моему проекту находится здесь:      &lt;br /&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/"&gt;https://docs.google....mebhKZtPqfKpsQ/&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Я включил весь код и множество других вещей здесь: &lt;a href="https://drive.google.com/folderview?id=0BxnDbk7S7ncMU3RrdFJOdV8teE0&amp;amp;usp=sharing"&gt;https://drive.google...eE0&amp;amp;usp=sharing&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Проект закончен еще не на сто процентов, и есть некоторые недоделки, но надеюсь, я вскоре выращу красивые цветы! &lt;/p&gt;    &lt;p&gt;&lt;a href="http://forums.netduino.com/index.php?/topic/10367-automated-urban-garden/"&gt;[Щелкните, чтобы увидеть исходники...]&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.bg2hjcd7e8um"&gt;&lt;b&gt;Домашний сад&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Приключения с автоматизированным домашним садом&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.ug8oj8e4o9vp"&gt;Основы&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.fhagshs3v9l4"&gt;Список материалов&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.v3f6pmleeduu"&gt;Функции&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.e52t5nym4ihg"&gt;Конструкция&lt;/a&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.7ksuovyvwgr4"&gt;Конструкция прототипа&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.85e8clu32vg5"&gt;Конструкция резервуара&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.90vx8xg3d19r"&gt;Конструкция корпуса&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.gm5j3er8daq"&gt;Законченный сад&lt;/a&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.udalluqbvef"&gt;Версия 1.0&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.yheogbdikeft"&gt;Версия 1.5&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.ptlo7mw279ai"&gt;Код&lt;/a&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.fs02o6tjmbjt"&gt;Program.cs&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.2p4wtro2kdk6"&gt;Bluetooth.cs&lt;/a&gt;&lt;/li&gt;      &lt;li&gt;&lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.1vxt11ruqi5x"&gt;moistureSensor.cs&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.egv5sgjf3y6q"&gt;Приложение для Android&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://docs.google.com/document/d/13ayV-Prtwx4-yEWhqDYJ4xwgK5Mr-mebhKZtPqfKpsQ/edit?pli=1#heading=h.duqcjgi492ey"&gt;Альтернативные конфигурации&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Основы&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Жизнь в однокомнатной квартире в Бруклине не слишком располагает к растениеводству. Тем не менее, глядя на неиспользуемую нишу в своей квартире, я подумал, что это может быть идеальным местом для некоторых комнатных растений. Просто совершенным за исключением полного отсутствия света и наличия какого-нибудь фермерского опыта с моей стороны.&lt;/p&gt;    &lt;p&gt;Так родилась идея автоматизированного сада. Шанс внести немного жизни в маленькую квартиру. Сад должен быть небольшим, чтобы вписываться в нишу. Он должен быть самоподдерживающимся, чтобы исключить из уравнения гибель растений. Очевидно, что он должен быть относительно недорогой. Я никак не являюсь профессиональным программистом или инженером-электротехником, поэтому уверен, что есть много способов, которыми этот проект может быть улучшен, но с точки зрения любителя этот проект оказался очень интересным, и я узнал много нового. Так что здесь я сделаю все возможное, чтобы поделиться моими приключениями в озеленении квартиры.&lt;/p&gt;    &lt;p&gt;Замечание. Все изображения и код, упоминаемые в этом документе, вместе с некоторыми неупомянутыми вещами, можно найти &lt;a href="https://drive.google.com/folderview?id=0BxnDbk7S7ncMU3RrdFJOdV8teE0&amp;amp;usp=sharing"&gt;в этом каталоге&lt;/a&gt;, в нем содержатся также несколько видео. Можете свободно поискать там. Если у вас есть вопросы или комментарии, посылайте их мне, или в помещайте в ветку форума по Netduino. Надеюсь, вы получите удовольствие!&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5504.clip_5F00_image004_5F00_09EB8777.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1754.clip_5F00_image004_5F00_thumb_5F00_61DB6908.png" width="629" height="182" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;&lt;/blockquote&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10533266" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/-NET+Microframework/">.NET Microframework</category></item><item><title>Cоветы по написанию сценариев Visual Studio с PowerShell</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/05/28/it-s-build-day-in-honor-here-s-a-tip-to-script-visual-studio-with-powershell.aspx</link><pubDate>Wed, 28 May 2014 12:36:52 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10529045</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10529045</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/05/28/it-s-build-day-in-honor-here-s-a-tip-to-script-visual-studio-with-powershell.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;На Build 2014 все сосредоточились, главным образом, на ключевых докладах и сессиях, которые можно посмотреть здесь &lt;a href="http://channel9.msdn.com/"&gt;http://channel9.msdn.com&lt;/a&gt;, здесь &lt;a href="http://www.buildwindows.com/"&gt;http://www.buildwindows.com/&lt;/a&gt; и, наконец здесь &lt;a href="http://channel9.msdn.com/events/build/2014"&gt;http://channel9.msdn.com/events/build/2014&lt;/a&gt;, поэтому сегодня я собираюсь рассказать о приеме Стюарта Лика (&lt;a href="http://blogs.msdn.com/b/stuartleeks/"&gt;Stuart Leeks&lt;/a&gt;), посвященном тому, как рационализировать показ презентаций в Visual Studio...&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;a href="http://blogs.msdn.com/b/stuartleeks/archive/2014/03/19/scripting-visual-studio-with-powershell-great-for-demos.aspx"&gt;&lt;b&gt;Сценарии в &lt;/b&gt;&lt;b&gt;Visual&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Studio&lt;/b&gt;&lt;b&gt; с помощью &lt;/b&gt;&lt;b&gt;PowerShell – классно для демонстраций&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;Обзор&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В этом сообщении я покажу как автоматизировать задачи при открытии решения в Visual Studio.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;NuGet&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;приводит &lt;/b&gt;&lt;b&gt;PowerShell&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В великой схеме вещей не встречалось настолько же великого с момента появления NuGet, и я едва могу вспомнить, как я обходился без него. Кроме обычных преимуществ, мне нравится консоль диспетчера пакетов. Да, я фанат клавиатуры (и назначил сочетания клавиш для нее), и могу легко добавлять пакеты, не отрывая рук от клавиатуры. Но консоль также дает мне PowerShell внутри VisualStudio!&lt;/p&gt;    &lt;p&gt;Работая в консоли можно использовать стандартные командлеты и псевдонимы PowerShell. Наприме, dir или Get-ChildItem будут работать (и вы начнете с каталога решения, что очень удобно!). NuGet также добавляет и &lt;a href="http://docs.nuget.org/docs/reference/package-manager-console-powershell-reference"&gt;другие командлеты&lt;/a&gt; – Install-Package и Get-Project. Кроме этого, вы получаете дополнительный контекст, так переменная $dte дает доступ к верхнему уровню объекта DTE для API автоматизации Visual Studio. Поэтому введя $dte.Solution.FullName, вы получите полный путь к текущему решению.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Сценарии&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;пакета&lt;/b&gt;&lt;b&gt; NuGet&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Проблема?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Когда я готовлю демонстрации, то стараюсь быть разумно дисциплинированным и не забывать делать следующее:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;Создавать сценарии, возвращающие демонстрационный каталог в исходное состояние &lt;/li&gt;      &lt;li&gt;Писать заметки, включающие список файлов, открываемых в этой демонстрации, какие страницы на сайте открываются (я часто выступаю перед веб-разработчиками) &lt;/li&gt;      &lt;li&gt;Создавать копию демонстрационного решения в окончательной форме – это работает тогда, когда кажется, что ничто не идет правильно, и вы просто хотите пропустить все до конца и при этом что-то показать! &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Некоторое время тому назад я выступал как содокладчик с моим коллегой, который внезапно закончил свою часть и надо было начинать мне. Это был небольшой вызов, так как некоторые демонстрации нужно было сконфигурировать после загрузки решения, чтобы сохранить порядок выступления. Как раз тогда не было времени сделать это, и я задумался, как решить такую проблему. Решение? NuGet и сценарий PowerShell!&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Соединяем кусочки вместе&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Решение оказалось совсем простым: создаем пакет NuGet с файлом Init.ps1, который запускается при загрузке решения, затем находим и выполняем известный сценарий в решении. &lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Дополнительные замечания&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Я не собираюсь вдаваться в детали, так как думаю, что концепция понятна, если вы знаете что является движущими частями. Но есть пара других моментов, которые объяснены недостаточно. &lt;/p&gt;    &lt;p&gt;&lt;b&gt;Предотвращение исполнения _&lt;/b&gt;&lt;b&gt;startup&lt;/b&gt;&lt;b&gt;.&lt;/b&gt;&lt;b&gt;ps&lt;/b&gt;&lt;b&gt;1...&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Дополнительные команды&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Я обнаружил, что есть несколько общих вещей, которые хотелось бы сделать в моем сценарии _startup.ps1, поэтому я добавил их в виде командлетов. Объектная модель DTE для Visual Studio очень мощная, но не слишком дружественная к пользователям &lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6648.clip_5F00_image002_5F00_496D922E.png"&gt;&lt;img title="clip_image002" style="border-width: 0px; display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5672.clip_5F00_image002_5F00_thumb_5F00_7278312A.png" width="28" height="28" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;Open-SolutionFile. Принимает имя открываемого файла. Обычно моя демонстрация определяет открываемые файлы в процессе инициализации, так что это удобно. &lt;/li&gt;      &lt;li&gt;Open-ProjectFile. Принимает имя проекта и имя файла и открывает файл внутри этого проекта. Это просто сохраняет шаг по добавлению каталога проекта в имя файла. &lt;/li&gt;      &lt;li&gt;Close-AllDocuments. Если я собираюсь открыть файлы, которые мне нужны и не хочу никаких других файлов, то сначала я вызываю этот командлет. &lt;/li&gt;      &lt;li&gt;Invoke-SolutionBuild. Собрать решение! &lt;/li&gt;      &lt;li&gt;Start-Solution. Собрать и запустить решение. &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Командлеты Open-SolutionFile и Open-ProjectFile оба возвращают объект &lt;a href="http://msdn.microsoft.com/en-us/library/envdte.window.aspx"&gt;EnvDTE.Window&lt;/a&gt;, поэтому можно вызвать его методы, т.е. ... &lt;a href="http://blogs.msdn.com/b/stuartleeks/archive/2014/03/19/scripting-visual-studio-with-powershell-great-for-demos.aspx"&gt;[Щелкните здесь, чтобы увидеть все сценарии, советы и код]&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10529045" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio/">Visual Studio</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/PowerShell/">PowerShell</category></item><item><title>То, что должно быть в каждом пакете, – пакет кода Windows API</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/04/02/something-that-should-be-in-everyone-s-pack-the-windows-api-code-pack.aspx</link><pubDate>Wed, 02 Apr 2014 07:05:12 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10512989</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10512989</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/04/02/something-that-should-be-in-everyone-s-pack-the-windows-api-code-pack.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний проект может и не является землекрушительным или «проектом за гранью», но может оказаться полезным большинству из вас. Он поможет использовать преимущества Windows OS более простым, легким и дружелюбным способом.&lt;/p&gt;  &lt;p&gt;Скажем, вы создаете приложение, которому требуется доступ к метаданным файла, например, к метаданным изображения? геоположению, относительной апертуры, камеры? или музыкальным метаданным? видео?&lt;/p&gt;  &lt;p&gt;Роб Сандерс (Rob Sanders) покажет нам как...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://dotnet.dzone.com/articles/extracting-file-metadata-c-and-0"&gt;&lt;b&gt;Извлечение метаданных файла с помощью &lt;/b&gt;&lt;b&gt;C&lt;/b&gt;&lt;b&gt;# и .&lt;/b&gt;&lt;b&gt;NET Framework&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Введение&lt;/p&gt;    &lt;p&gt;В выходные я решил попробовать импортировать метаданные изображения, используя C# и .NET Framework. Помимо «нормальных» атрибутов файла, таких как дата изменения и размер, Windows Explorer (оболочка) предоставляет расширенную информацию о файле, которая может быть востребована.&lt;/p&gt;    &lt;p&gt;Вопрос в том, как извлечь эту информацию, принимая во внимание, что у .NET Framework весьма ограниченная поддержка для такого типа выборки? Читайте статью, чтобы узнать, как это сделать.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;В моем конкретном случае требовалось получить расширенные свойства, имеющие отношение к фотографии, а именно, скорость ISO, относительную апертуру, фокусное расстояние, размеры и т. д. Каждое свойство имеет идентификатор, который модно использовать, чтобы получить требуемые данные. Это можно сделать из .NET для некоторых видов информации, как показано здесь.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;Поэтому можно получать больше информации вроде этой, используя механизм взаимодействия Win32 и напрямую активизируя вызовы оболочки из C#/ .NET, но этот способ требует много времени, не говоря о трудоемкости, заключающейся в необходимости отслеживать при его использовании правильные интерфейсы Win32 API и идентификаторы свойств объектов. Есть ли более простой путь?&lt;/p&gt;    &lt;p&gt;Введение в Windows API Code Pack&lt;/p&gt;    &lt;p&gt;К счастью, кое-кто уже сделал за нас эту работу, достигшую кульминации в крайне полезном пакете &lt;a href="http://archive.msdn.microsoft.com/WindowsAPICodePack"&gt;Windows API Code Pack&lt;/a&gt;, последнюю версию которого &lt;a href="http://archive.msdn.microsoft.com/WindowsAPICodePack/Release/ProjectReleases.aspx?ReleaseId=4906"&gt;можно получить по ссылке&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;В пакете содержится документация, примеры, откомпилированный и исходный код.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Получение данных о расширенных свойствах&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Одной из самых замечательных особенностей пакета является факт, состоящий в том, что кто-то сопоставил все значения расширенных свойств со строго типизированными определениями, что сохранит нам кучу времени и сил.&lt;/p&gt;    &lt;p&gt;Например, имея полностью определенное имя файла и путь фотографии, можно получить расширенную информацию о файле (производитель камеры и ее модель), используя следующий код:&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Использование пакета&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Основываясь на вышеизложенном, проще простого вытащить данные о расширенных свойствах фотографии. Я написал небольшую утилиту, чтобы продемонстрировать, как напрямую извлечь необходимые данные. Потребуются две сборки пакета: Microsoft.WindowsAPICodePack.dll и Microsoft.WindowsAPICodePack.Shell.dll.&lt;/p&gt;    &lt;p&gt;Вот полный дамп использованного кода:&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;Заключение&lt;/p&gt;    &lt;p&gt;Очевидно, что данный пакет содержит значительно больше, чем абстракция Windows Shell API. Позднее я проведу еще исследование, но я чувствую, что эта статья может быть полезна тем, кому нужно простое решение по извлечению расширенных свойств файлов. Наслаждайтесь.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://archive.msdn.microsoft.com/WindowsAPICodePack"&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;b&gt;® &lt;/b&gt;&lt;b&gt;API Code Pack &lt;/b&gt;&lt;b&gt;для &lt;/b&gt;&lt;b&gt;Microsoft&lt;/b&gt;&lt;b&gt;® .&lt;/b&gt;&lt;b&gt;NET Framework&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;b&gt;® &lt;/b&gt;&lt;b&gt;API Code Pack &lt;/b&gt;&lt;b&gt;для &lt;/b&gt;&lt;b&gt;Microsoft&lt;/b&gt;&lt;b&gt;® .&lt;/b&gt;&lt;b&gt;NET Framework&lt;/b&gt; представляет собой библиотеку с открытым исходным кодом, которую можно использовать для получения доступа к некоторым параметрам Windows 7 и Windows Vista из управляемого кода. Сейчас эти возможности Windows недоступны разработчикам в .NET Framework.&lt;/p&gt;    &lt;p&gt;Конкретные возможности, поддерживаемые в текущей версии (1.1) библиотеки:&lt;/p&gt;    &lt;p&gt;· Панель задач Windows 7&lt;/p&gt;    &lt;p&gt;§ Списки переходов (Jump Lists), дополнительные значки (Icon Overlay), индикатор выполнения (Progress Bar), вложенные эскизы (Tabbed Thumbnails) и панели инструментов для эскизов (Thumbnail Toolbars)&lt;/p&gt;    &lt;ul&gt;     &lt;ul&gt;       &lt;li&gt;Оболочка Windows&lt;/li&gt;     &lt;/ul&gt;   &lt;/ul&gt;    &lt;p&gt;o Библиотеки Windows 7&lt;/p&gt;    &lt;p&gt;o Поддержка API поиска Windows Shell&lt;/p&gt;    &lt;p&gt;o Управляющий элемент Explorer Browser&lt;/p&gt;    &lt;p&gt;o Иерархия сущностей Shell Namespace&lt;/p&gt;    &lt;p&gt;o Система свойствWindows Shell&lt;/p&gt;    &lt;p&gt;o Перетаскивание для объектов Shell&lt;/p&gt;    &lt;p&gt;o Общие файловые диалоги Windows Vista и Windows 7, включая настраиваемые элементы управления&lt;/p&gt;    &lt;p&gt;o Предопределенные папки и контейнеры нефайловой системы&lt;/p&gt;    &lt;p&gt;o Просмотрщик объектов оболочки&lt;/p&gt;    &lt;p&gt;o Поддержка API расширений оболочки&lt;/p&gt;    &lt;p&gt;· DirectX&lt;/p&gt;    &lt;p&gt;o API Direct3D 11.0, Direct3D 10.1/10.0, DXGI 1.0/1.1, Direct2D 1.0, DirectWrite и Windows Imaging Component (WIC)&lt;/p&gt;    &lt;p&gt;· Диалоги задач Windows Vista и Windows 7&lt;/p&gt;    &lt;p&gt;· API платформы сенсоров&lt;/p&gt;    &lt;p&gt;· API расширенных лингвистических сервисов&lt;/p&gt;    &lt;p&gt;· API управления питанием&lt;/p&gt;    &lt;p&gt;· API рестарта и восстановления приложений&lt;/p&gt;    &lt;p&gt;· API управляющей программы списка сетей&lt;/p&gt;    &lt;p&gt;· Управляющий элемент Command Link и определенная в системе иконка оболочки Shell&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Что нового в данном обновлении (&lt;/b&gt;&lt;b&gt;v1&lt;/b&gt;&lt;b&gt;.1)&lt;/b&gt;:&lt;/p&gt;    &lt;p&gt;В этом обновлении пакета сделаны следующие усовершенствования:&lt;/p&gt;    &lt;p&gt;· Можно обращаться ко многим нарушениям FxCop и предупреждениям PREfast&lt;/p&gt;    &lt;p&gt;· Исправлены ошибки в разных примерах и функциях&lt;/p&gt;    &lt;p&gt;o Включая многие улучшения API&lt;/p&gt;    &lt;p&gt;· Новые функции&lt;/p&gt;    &lt;p&gt;o Просмотрщик объектов оболочки (Shell Object Watcher)&lt;/p&gt;    &lt;p&gt;o API обработчика предпросмотров (Preview Handler APIs)&lt;/p&gt;    &lt;p&gt;o API обработчика миниатюр (Thumbnail Handler APIs)&lt;/p&gt;    &lt;p&gt;· Новые примеры для новых функций&lt;/p&gt;    &lt;p&gt;· Совместимость с Visual Studio 2010&lt;/p&gt;    &lt;p&gt;· Покрытие тестов xUnit&lt;/p&gt;    &lt;p&gt;· Локализация строк&lt;/p&gt;    &lt;p&gt;· Подписанные сборки&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Вот снимок примеров, полученный с помощью утилиты WinDirStat&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7725.clip_5F00_image001_5F00_13618E08.png"&gt;&lt;img title="clip_image001" style="display: inline;" border="0" alt="clip_image001" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0434.clip_5F00_image001_5F00_thumb_5F00_19AAF547.png" width="770" height="969" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Так как мы сфокусировались на свойствах, вот часть из них, приведенная в документации:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8231.clip_5F00_image003_5F00_0B6F0D08.png"&gt;&lt;img title="clip_image003" style="display: inline;" border="0" alt="clip_image003" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3617.clip_5F00_image003_5F00_thumb_5F00_43B014D1.png" width="647" height="1145" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;И, специально, свойства для фотографий:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3666.clip_5F00_image005_5F00_3B5160DC.png"&gt;&lt;img title="clip_image005" style="display: inline;" border="0" alt="clip_image005" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8877.clip_5F00_image005_5F00_thumb_5F00_78751C61.png" width="110" height="460" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Да, здорово. И это только верхушка архива пакета.&lt;/p&gt;  &lt;p&gt;Кстати, я работаю на Windows 8.1 и VS 2013, и примеры работают у меня прекрасно…&lt;/p&gt;  &lt;p&gt;Image Credit: &lt;a href="http://www.globalnerdy.com/"&gt;Global Nerdy&lt;/a&gt; – &lt;a href="http://www.globalnerdy.com/2009/08/12/windows-api-code-pack-for-net-framework-released/"&gt;Windows API Code Pack for .NET Framework Released&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10512989" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Basic/">Visual Basic</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2300_/">C#</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Interop/">Interop</category></item><item><title>Инструментарий Python v2.0 для Visual Studio</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/03/18/python-tools-for-visual-studio-v2-0.aspx</link><pubDate>Tue, 18 Mar 2014 08:33:35 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10508669</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10508669</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/03/18/python-tools-for-visual-studio-v2-0.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний проект, посвященный языкам, представляет бесплатное расширение с открытым исходным текстом для Visual Studio, которое понравиться пользователям Python`а (а также всем, кто хочет узнать, как можно расшир��ть Visual Studio для добавления поддержки новых языков).&lt;/p&gt;  &lt;p&gt;&lt;a href="https://pytools.codeplex.com/"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2273.clip_5F00_image002_5F00_4B1F2E8F.png" width="628" height="91" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;PTVS – это бесплатный подключаемый модуль с открытым исходным кодом, превращающий Visual Studio в Python IDE.&lt;/p&gt;    &lt;p&gt;PTVS поддерживает CPython, IronPython, редактирование, просмотр, Intellisense, объединенную отладку Python/C++, удаленную отладку для linux/MacOS, профилирование, IPython, Django, облачные вычисления с клиентскими библиотеками для Windows, Linux и MacOS.&lt;/p&gt;    &lt;p&gt;Спроектировано, разработано и поддерживается Microsoft и сообществом.&lt;/p&gt;    &lt;p&gt;&lt;object width="425" height="355"&gt;&lt;param name="movie" value="http://www.youtube.com/v/JNNAOypc6Ek&amp;amp;hl=en"&gt;&lt;/param&gt;&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/JNNAOypc6Ek&amp;amp;hl=en" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="https://pytools.codeplex.com/wikipage?title=PTVS%20Installation"&gt;&lt;b&gt;Установка пакета &lt;/b&gt;&lt;b&gt;Python Tools for Visual Studio&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Установка PTVS относительно проста. По существу, вам нужны три вещи:&lt;/p&gt;    &lt;p&gt;&lt;b&gt;1) &lt;/b&gt;&lt;b&gt;Visual&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Studio&lt;/b&gt;&lt;b&gt; (платная или бесплатная версия)&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;2) Расширение &lt;/b&gt;&lt;b&gt;PTVS&lt;/b&gt;&lt;b&gt; (обеспечивает поддержку &lt;/b&gt;&lt;b&gt;VS&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Python&lt;/b&gt;&lt;b&gt;)&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;3) Интерпретатор &lt;/b&gt;&lt;b&gt;Python&lt;/b&gt;&lt;b&gt; (не входит в пакет &lt;/b&gt;&lt;b&gt;PTVS&lt;/b&gt;&lt;b&gt;)&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Если у вас уже есть VS, установите PTVS. Если нет, рассмотрите установку интегрированного PTVS-пакета. Затем добавьте интерпретатор и можете начинать:&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4606.clip_5F00_image004_5F00_4F2C0D12.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7215.clip_5F00_image004_5F00_thumb_5F00_6EDD778B.png" width="628" height="399" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;«Интегрированный PTVS-пакет» объединяет оболочку «VS 2013 Shell» с PTVS в едином пакете. Результирующая среда Python IDE &lt;b&gt;полностью бесплатна и останется такой в будущем&lt;/b&gt;. Все возможности интегрированного PTVS совпадают с полной/платной версией VS, за исключением поддержки профилирования и модульных тестов. &lt;b&gt;&lt;i&gt;Замечание: интегрированный &lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;PTVS&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt; &lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;требует по крайней мере &lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;Win&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;7 &lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;SP&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;1 и &lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;IE&lt;/i&gt;&lt;/b&gt;&lt;b&gt;&lt;i&gt;10.&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;ЗАМЕЧАНИЕ&lt;/b&gt;: вы не сможете установить PTVS (или любое другое расширение) в редакции VS Express.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;В случае VS 2013 и IronPython установка прошла очень быстро и всё заработало сразу...&lt;/p&gt;  &lt;p&gt;Вот что вы увидите в шаблонах проектов WPF/Winform IronPython...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4846.clip_5F00_image006_5F00_04C6E9DC.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3005.clip_5F00_image006_5F00_thumb_5F00_64423ADA.png" width="628" height="385" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;И за секунды я написал свои первые строки в IronPython REPL,&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5355.clip_5F00_image008_5F00_43BD8BD9.png"&gt;&lt;img title="clip_image008" style="display: inline;" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2086.clip_5F00_image008_5F00_thumb_5F00_2338DCD8.png" width="628" height="336" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Если вы имеете дело с Python’ом и у вас есть Visual Studio, сделать это не проблема...&lt;/p&gt;  &lt;p&gt;Кроме того, поддерживаются Visual Studio 2010, 2012 и 2013.&lt;/p&gt;  &lt;p&gt;&lt;a href="https://pytools.codeplex.com/releases/view/103102"&gt;&lt;b&gt;Загрузка версии 2.0&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="https://pytools.codeplex.com/releases/view/103102"&gt;&lt;b&gt;&lt;img title="clip_image010" style="display: inline;" border="0" alt="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6747.clip_5F00_image010_5F00_6DC2AB63.png" width="423" height="337" /&gt;&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Мы рады представить выпуск Python Tools for Visual Studio 2.0. Python Tools для Visual Studio (PTVS) – это модуль расширения Visual Studio с открытым исходным текстом, поддерживающий программирование на языке Python. PTVS обеспечивает широкий диапазон возможностей, включая CPython/IronPython, редактирование/Intellisense/отладку/профилирование, облако, IPython, а также кроссплатформенную и кроссязыковую отладку.&lt;/p&gt;    &lt;p&gt;КРАТКИЙ ВИДЕООБЗОР      &lt;br /&gt;Для краткого ознакомления с общими возможностями IDE посмотрите &lt;a href="http://www.youtube.com/watch?v=JNNAOypc6Ek&amp;amp;hd=1"&gt;это видео&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;ИЗМЕНЕНИЯ ПО ОТНОШЕНИЮ К ВЕРСИИ 1.5      &lt;br /&gt;Произошел ряд значительных улучшений по сравнению с предыдущей версией 1.5RTM, многие из которых были инициированы вашими отзывами и предложениями. Сводка изменений представлена ниже:&lt;/p&gt;    &lt;p&gt;IDE      &lt;br /&gt;• Среда Python: см. документацию или этот &lt;a href="http://www.youtube.com/watch?v=L1bk7t9YDkE"&gt;видеообзор&lt;/a&gt;. &lt;/p&gt;    &lt;p&gt;• Поддержка виртуальных сред: легко и быстро создать в ваших проектах изолированные среды для установки пакетов.&lt;/p&gt;    &lt;p&gt;• Различные улучшения Intellisense, особенно для пакетов с компилируемыми модулями, такими как numpy и PyQt. Подробнее см. в документации или в &lt;a href="http://www.youtube.com/watch?v=TFxRSV9cucM"&gt;видеообзоре&lt;/a&gt;. &lt;/p&gt;    &lt;p&gt;• Новая команда реформатирования кода&lt;/p&gt;    &lt;p&gt;Отладка      &lt;br /&gt;• Отладка в смешанном режиме для Python и C++. (&lt;a href="http://www.youtube.com/watch?v=wvJaKQ94lBY"&gt;видеообзор&lt;/a&gt;)&lt;/p&gt;    &lt;p&gt;• Удаленная кроссистемная отладка для Windows, Linux и MacOS: (&lt;a href="http://www.youtube.com/watch?v=VTluEosS4Ts"&gt;видеообзор&lt;/a&gt;)&lt;/p&gt;    &lt;p&gt;Облако      &lt;br /&gt;• Публикация Django-приложений на веб-сайтах Windows Azure – вдобавок к уже существующей возможности публикации в облачный сервис теперь можно быстро публиковать сайт в Windows Azure&lt;/p&gt;    &lt;p&gt;Веб-сайты (&lt;a href="http://www.youtube.com/watch?v=S7A7VNnsA_8"&gt;видеообзор&lt;/a&gt;)       &lt;br /&gt;• Исправлены некоторые ошибки в Azure SDK для Windows, Linux и MacOS.&lt;/p&gt;    &lt;p&gt;Общие      &lt;br /&gt;• Начиная с VS2013, мы рады объявить, что PTVS поставляется «в коробке». Это означает, что когда вы устанавливаете Visual Studio в ней есть ссылка на существующую загрузку «Python», которая направит вас к последней версии установщика PTVS.&lt;/p&gt;    &lt;p&gt;• Исправлены некоторые ошибки и улучшена производительность, например, время загрузки большого проекта.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;И имеется также ряд примеров (например, для Kinect).&lt;/p&gt;  &lt;p&gt;&lt;a href="https://pytools.codeplex.com/releases/view/103102"&gt;&lt;img title="clip_image012" style="display: inline;" border="0" alt="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8838.clip_5F00_image012_5F00_6AB04D6E.png" width="271" height="460" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Tags/visual+studio"&gt;&amp;#160;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10508669" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio/">Visual Studio</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Programming+Languages/">Programming Languages</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/IronPython/">IronPython</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Python/">Python</category></item><item><title>«Chronicling America» с JavaScript, Windows 8.1 и VS 2013</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/03/17/quot-chronicling-america-quot-with-a-little-javascript-windows-8-1-and-vs-2013.aspx</link><pubDate>Mon, 17 Mar 2014 07:14:00 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10508344</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10508344</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/03/17/quot-chronicling-america-quot-with-a-little-javascript-windows-8-1-and-vs-2013.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшнее сообщение посвящено проекту на Windows 8.1, который возвратит нас в прошлое. Мне нравится пролистывать старые микрофиши газет, цепляясь взглядом за отблески прошлого.&lt;/p&gt;  &lt;p&gt;Сегодняшний проект – стартовая точка для чего-то подобного…&lt;/p&gt;  &lt;p&gt;&lt;a href="http://code.msdn.microsoft.com/windowsapps/Chronicling-America-8ce08f62"&gt;&lt;b&gt;Chronicling America&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Библиотека Конгресса обеспечила великолепный API, чтобы просматривать статьи конца 19-го – начала 20-го века. Код примера использует эти API и отображает содержимое в приложении Магазина Windows. Моей целью было построить визуально приятное приложение, эмулирующее старые микрофиши. Возможности увеличения и перемотки, предоставляемые Windows 8.1, делают несложным создание такого приложения с прекрасным внешним видом.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Сборка примера&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Это очень простой проект. Здесь ничего не нужно!&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Описание&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Всё, что я хотел сделать – это предложить пользователям новый взгляд на знакомый интерфейс. Я всегда очаровывался проектором микрофишей и хотел слегка его модернизировать. С моей точки зрения, естественным обновлением является GridView. Добавляя возможность поиска, получим совершенно новое качество, отсутствовавшее в микрофишах. Наконец, я использовал элемент управления flipview, чтобы организовать в приложении перелистывание страниц газеты. Это был забавный проект.&lt;/p&gt;    &lt;p&gt;Вещи, которые я хотел бы сделать в этом приложении:&lt;/p&gt;    &lt;p&gt;&lt;i&gt;...&lt;/i&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Файл исходного кода&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· /js/data.js – Центральный компонент доступа к данным для обмена с Chronicling America&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Подробнее&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Посмотрите сайты &lt;a href="http://chroniclingamerica.loc.gov/"&gt;Chronicling America&lt;/a&gt; и &lt;a href="http://www.opensearch.org/Home"&gt;OpenSearch&lt;/a&gt; для более подробной информации.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Как и говорит автор чтобы запустить приложение не надо делать ничего особенного (кроме Windows 8.1 и VS 2013). Приложение скачалось и запустилось без проблем...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1184.clip_5F00_image002_5F00_1BE21192.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2438.clip_5F00_image002_5F00_thumb_5F00_48F98F11.png" width="654" height="380" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2061.clip_5F00_image004_5F00_4170B055.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4431.clip_5F00_image004_5F00_thumb_5F00_1A38F7D1.png" width="654" height="380" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Вот снимок проекта...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8270.clip_5F00_image006_5F00_79B448CF.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6320.clip_5F00_image006_5F00_thumb_5F00_0B273A59.png" width="654" height="362" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Теперь скачайте приложение и займитесь с ним!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10508344" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/JavaScript/">JavaScript</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/WIndows+8-1/">WIndows 8.1</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio+2013/">Visual Studio 2013</category></item><item><title>Оптимистичный взгляд на Aphid… встраиваемый язык сценариев, совместимый с XCopy</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/03/06/a-rosy-look-at-aphid-xcopy-compatible-embedded-scripting-and-more.aspx</link><pubDate>Thu, 06 Mar 2014 09:14:58 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10505621</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10505621</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/03/06/a-rosy-look-at-aphid-xcopy-compatible-embedded-scripting-and-more.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;А теперь кое-что другое…&lt;/p&gt;  &lt;p&gt;Сегодняшний проект Джона Лейча (John Leitch) я считаю интересным с разных точек зрения. Во-первых, мне всегда импонировала идея использования встроенного языка сценариев в приложениях. Во-вторых, мне нравится, что такой подход достаточно прост и самодостаточен. Наконец, исходный код включен целиком.&lt;/p&gt;  &lt;p&gt;И хотя этот проект по-прежнему находится на альфа-стадии, он интересен для ряда читателей, от создателей языков, до тех, кто собирается добавить в свои приложения возможность языка сценариев.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.codeproject.com/Articles/669194/Making-NET-Applications-Scriptable-with-Aphid-an-E"&gt;&lt;b&gt;Добавление встраиваемого языка сценариев &lt;/b&gt;&lt;b&gt;Aphid &lt;/b&gt;&lt;b&gt;в .&lt;/b&gt;&lt;b&gt;NET&lt;/b&gt;&lt;b&gt;-приложения&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Aphid – это встраиваемый, кросс-платформенный, много парадигменный и высоко интероперабельный язык сценариев на платформе .NET. Интерпретатор Aphid реализован полностью на C#. Данная статья является введением в Aphid, и поэтому покрывает только некоторые доступные возможности. Кроме того, Aphid в настоящее время находится на альфа-стадии, и поэтому по мере его эволюции данная статья будет меняться и расширяться. Чтобы получить наиболее свежую версию Aphid, посетите страницу &lt;a href="https://aphid.codeplex.com/"&gt;CodePlex&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Какими языками был вдохновлен &lt;/b&gt;&lt;b&gt;Aphid&lt;/b&gt;&lt;b&gt;?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Aphid – С-подобный язык, вдохновленный главным образом JavaScript. Однако, он несет в себе черты С# и, в меньшей степени, F#.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Зачем еще один язык сценариев?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В настоящее время существуют несколько легко встраиваемых языков сценариев для платформы .NET. Среди них многие имеют сильные зависимости, делающие необходимым включение разных сборок. В то же время в других отсутствует интероперабельность, требующая значительного количества связующего кода. Aphid пытается найти решение этих проблем путем предоставления легко встраиваемого, высоко интероперабельного языка сценариев, находящегося в одной DLL-библиотеке.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;b&gt;, &lt;/b&gt;&lt;b&gt;World&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Начало работы с Aphid совершенно безболезненно. Во-первых, добавьте ссылку на библиотеку &lt;i&gt;Components&lt;/i&gt;&lt;i&gt;.&lt;/i&gt;&lt;i&gt;Aphid&lt;/i&gt;&lt;i&gt;.&lt;/i&gt;&lt;i&gt;dll&lt;/i&gt;. Затем создайте экземпляр AphidInterpreter. Наконец, вызовите метод экземпляра AphidInterpreter.Interpret для выполнения сценария Aphid. Просто, правда? Полный код программы «Hello world» на C#/Aphid приведен ниже в листинге 1.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7725.clip_5F00_image002_5F00_3DE1470F.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6201.clip_5F00_image002_5F00_thumb_5F00_6B64F783.png" width="472" height="330" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;С#-часть приложения должна быть понятна без объяснений. Однако программа Aphid нуждается в некоторых пояснениях. Программа состоит из двух предложений.&lt;/p&gt;    &lt;p&gt;Первое – предложение загрузки скрипта, состоящее из оператора загрузки скрипта (#) и строкового операнда ‘Std’. По умолчанию загрузчик Aphid сначала ищет в подкаталоге &lt;i&gt;Library &lt;/i&gt;каталога, в котором расположена библиотека &lt;i&gt;Components&lt;/i&gt;&lt;i&gt;.&lt;/i&gt;&lt;i&gt;Aphid&lt;/i&gt;&lt;i&gt;.&lt;/i&gt;&lt;i&gt;dll&lt;/i&gt;. Загрузчик автоматически добавляет расширение ALX к переданному имени скрипта, так что в данном случае это выглядит как &lt;i&gt;&amp;lt;&lt;/i&gt;&lt;i&gt;dll&lt;/i&gt;&lt;i&gt;&amp;gt;\&lt;/i&gt;&lt;i&gt;Library&lt;/i&gt;&lt;i&gt;\&lt;/i&gt;&lt;i&gt;Std&lt;/i&gt;&lt;i&gt;.&lt;/i&gt;&lt;i&gt;alx&lt;/i&gt;. Предполагая, что всё в порядке, он должен найти и загрузить файл, являющийся стандартной библиотекой Aphid и содержащей полезные функции для работы со строками, вывода на консоль и т. п.&lt;/p&gt;    &lt;p&gt;Второе предложение – это вызов выражения, которое запускает print – функцию, являющуюся частью стандартной библиотеки Aphid. Эта строка кода также должна быть понятна.&lt;/p&gt;    &lt;p&gt;После запуска программы на устройстве вывода появляется следующее (листинг 2):&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3173.clip_5F00_image004_5F00_6852998E.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3426.clip_5F00_image004_5F00_thumb_5F00_3EDE584E.png" width="367" height="107" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="https://aphid.codeplex.com/"&gt;&lt;b&gt;Aphid&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;Какие стильные возможности поддерживает &lt;/b&gt;&lt;b&gt;Aphid&lt;/b&gt;&lt;b&gt;?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Назовем несколько:&lt;/p&gt;    &lt;p&gt;· Лямбда-выражения&lt;/p&gt;    &lt;p&gt;· Частичное применение функции&lt;/p&gt;    &lt;p&gt;· Конвейер&lt;/p&gt;    &lt;p&gt;· Сопоставление с образцом&lt;/p&gt;    &lt;p&gt;· Многопоточность&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Когда можно попробовать &lt;/b&gt;&lt;b&gt;Aphid&lt;/b&gt;&lt;b&gt;?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Прямо сейчас, если хотите. Хотя формально Aphid находится на альфа-стадии, я в настоящее время использую его в нескольких производственных системах с большим успехом. Однако альфа-версия имеет некоторые особенности, текущая документация минимальна, как и имеющиеся библиотеки, а доступные средства разработки еще не зрелы.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Я скачал последнюю версию, и за исключением необходимости поправить ссылку NUnit в проекте Components.Aphid.Tests.Integration (NuGet как всегда помог это сделать) исходник скомпилировался и все примеры отработали как ожидалось (что делает куратора кода вроде меня совсем счастливым).&lt;/p&gt;  &lt;p&gt;Вот снимок решения:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8267.clip_5F00_image006_5F00_398F719D.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4338.clip_5F00_image006_5F00_thumb_5F00_795BE8D3.png" width="412" height="284" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Кроме модульных&amp;#160; тестов&amp;#160; есть&amp;#160; ряд&amp;#160; заготовленных&amp;#160; примеров:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1638.clip_5F00_image008_5F00_36137164.png"&gt;&lt;img title="clip_image008" style="display: inline;" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2086.clip_5F00_image008_5F00_thumb_5F00_5CE41855.png" width="382" height="247" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1462.clip_5F00_image010_5F00_07BF0D19.png"&gt;&lt;img title="clip_image010" style="display: inline;" border="0" alt="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5224.clip_5F00_image010_5F00_thumb_5F00_329A01DC.png" width="650" height="313" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Я обнаружил одну очень интересную вещь – работает сервис языка, позволяя реальную интеграцию с Visual Studio, что выводит проект на совершенно иной уровень...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0285.clip_5F00_image012_5F00_2F87A3E7.png"&gt;&lt;img title="clip_image012" style="display: inline;" border="0" alt="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8662.clip_5F00_image012_5F00_thumb_5F00_2C7545F2.png" width="348" height="398" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4745.clip_5F00_image014_5F00_6C41BD28.png"&gt;&lt;img title="clip_image014" style="display: inline;" border="0" alt="clip_image014" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1256.clip_5F00_image014_5F00_thumb_5F00_4FC75BF9.png" width="629" height="455" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сейчас это очень круто...&amp;#160; Курс&amp;#160; вперед&amp;#160; и&amp;#160; преуспейте&amp;#160; с&amp;#160; написанием&amp;#160; скриптов...&lt;/p&gt;  &lt;p&gt;Замечание: Этот проект лицензируется по &lt;a href="http://www.opensource.org/licenses/gpl-3.0.html"&gt;GPLv3&lt;/a&gt;, так что убедитесь, что вы понимаете эту лицензию и ее ответвления при включении такого проекта в свою работу...&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10505621" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/embedded/">embedded</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Development/">Development</category></item><item><title>От 3D-печати до XInput – более 325 примеров кода для Windows 8.1</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/02/19/from-3d-printing-to-xinput-325-windows-8-1-code-samples.aspx</link><pubDate>Wed, 19 Feb 2014 08:31:53 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10501378</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10501378</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/02/19/from-3d-printing-to-xinput-325-windows-8-1-code-samples.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;В сегодняшнем сообщении мы рассмотрим примерно 1,97 млн примеров кода для Windows 8.1 (ну может быть не ТАК много, в действительности их на данный момент 332, но это лишь официальные данные).&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples"&gt;Примеры приложений Windows 8.1&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;Примеры приложений Магазина &lt;/b&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;b&gt; 8.1&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Этот пакет включает в себя примеры кода приложений, разработанных для Windows 8.1. Все примеры можно скачать единым файлом. Примеры подготовлены на языках C#, C++ и JavaScript. &lt;/p&gt;    &lt;p&gt;Галерея примеров содержит разнообразные примеры кода, иллюстрирующие новые модели программирования, платформы, возможности и компоненты, доступные в Windows 8.1 и Windows Server 2012 R2. Примеры предоставляются в сжатом виде zip-файлов, в которых содержатся файл решения Visual Studio (SLN-файл) вместе с исходниками, ресурсами, метаданными и др., необходимыми для успешной сборки и запуска примера.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Замечание&lt;/b&gt;. Примеры требуют Windows 8.1 и Microsoft Visual Studio 2013. Они не будут компилироваться в Microsoft Visual Studio 2012 для Windows 8.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Если вы не хотите скачивать полный файл, вот подборка по языкам: &lt;a href="http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples/file/99863/3/Windows%208.1%20app%20samples.zip"&gt;C++ (190.3 MB)&lt;/a&gt;, &lt;a href="http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples/file/99864/3/Windows%208.1%20app%20samples.zip"&gt;C# (65.8 MB)&lt;/a&gt;, &lt;a href="http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples/file/99865/3/Windows%208.1%20app%20samples.zip"&gt;JavaScript (68.0 MB)&lt;/a&gt;, &lt;a href="http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples/file/99866/3/Windows%208.1%20app%20samples.zip"&gt;Полный (298.0 MB)&lt;/a&gt;. Также можно перейти на вкладку Samples (примеры) и скачать отдельные примеры.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://code.msdn.microsoft.com/windowsapps/Windows-8-Modern-Style-App-Samples/view/SamplePack#content"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3377.clip_5F00_image002_5F00_4ABA2FD9.png" width="629" height="322" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Мне бы хотелось дать представление пакете примеров в случае полного набора, объемом 298 Мб, используя утилиту &lt;a href="http://windirstat.info/"&gt;WinDirStat&lt;/a&gt;, обеспечивающую прекрасное представление обо всех типах файлов в каталоге…&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8562.clip_5F00_image004_5F00_1C633ADD.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4670.clip_5F00_image004_5F00_thumb_5F00_2006771C.png" width="629" height="337" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7367.clip_5F00_image006_5F00_4C458EB1.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5468.clip_5F00_image006_5F00_thumb_5F00_12C50F6B.png" width="704" height="1383" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Здесь найдется что-нибудь почти для всех, кто разрабатывает приложения для Windows 8.1.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Tags/windows-8.1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10501378" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/XAML/">XAML</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2300_/">C#</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2B002B00_/">C++</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/JavaScript/">JavaScript</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Windows+Store+Applications/">Windows Store Applications</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/WIndows+8-1/">WIndows 8.1</category></item><item><title>PhysicsJS (физический движок на JavaScript)</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/31/physicsjs-yes-a-javascript-physics-engine.aspx</link><pubDate>Fri, 31 Jan 2014 07:27:51 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10495802</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10495802</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/31/physicsjs-yes-a-javascript-physics-engine.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;В сегодняшнем посте мы рассмотрим кое-что, на первый взгляд звучащее как оксюморон, – физический движок на JavaScript.&lt;/p&gt;  &lt;p&gt;Он пока еще находится в статусе альфа-версии, но при этом выглядит вполне прилично…&lt;/p&gt;  &lt;p&gt;&lt;a href="http://wellcaffeinated.net/PhysicsJS/"&gt;&lt;b&gt;PhysicsJS&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;Модульный, расширяемый и просто используемый физический движок для JavaScript.&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4503.clip_5F00_image002_5F00_0DCA5331.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4130.clip_5F00_image002_5F00_thumb_5F00_25F2DEEE.png" width="629" height="367" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;PhysicsJS находится в разработке (альфа-версия 0.5.3), и документация еще не завершена. Вы можете свободно применять его, но имейте в виду, что API еще меняются так же, как и документация! (&lt;a href="http://wellcaffeinated.net/PhysicsJS/contribute"&gt;Требуются разработчики и помощь&lt;/a&gt;!)&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Особенности&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· Используется в виде модуля &lt;b&gt;AMD&lt;/b&gt;&lt;b&gt; (&lt;/b&gt;&lt;b&gt;requireJS&lt;/b&gt;&lt;b&gt;)&lt;/b&gt; или глобального пространства имен. &lt;/p&gt;    &lt;p&gt;· &lt;b&gt;Модульный&lt;/b&gt;! Загружается только то, что нужно. Библиотека ядра сокращена всего до 31k. &lt;/p&gt;    &lt;p&gt;· &lt;b&gt;Расширяемый&lt;/b&gt;! Не нравится алгоритм определения столкновений? Замените на собственный! &lt;/p&gt;    &lt;p&gt;· Не связан с определенным механизмом рендеринга. Отображает в &lt;b&gt;DOM&lt;/b&gt;, &lt;b&gt;HTML&lt;/b&gt;&lt;b&gt;5 &lt;/b&gt;&lt;b&gt;Canvas&lt;/b&gt;, и где угодно… &lt;/p&gt;    &lt;p&gt;· Простой! Библиотека написана на &lt;b&gt;javascript&lt;/b&gt;, а не на С, скомпилированном в javascript. Синтаксис знаком разработчикам на javascript. &lt;/p&gt;    &lt;p&gt;· Расширения поддерживают объекты &lt;b&gt;points&lt;/b&gt;&lt;b&gt; (точки)&lt;/b&gt;, &lt;b&gt;circles&lt;/b&gt;&lt;b&gt; (круги)&lt;/b&gt; и произвольные &lt;b&gt;convex&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;polygons&lt;/b&gt;&lt;b&gt; (выпуклые многоугольники)&lt;/b&gt;. &lt;/p&gt;    &lt;p&gt;· Расширения поддерживают &lt;b&gt;постоянное гравитационное поле&lt;/b&gt;, &lt;b&gt;ньютоновскую гравитацию&lt;/b&gt;, &lt;b&gt;столкновения&lt;/b&gt;, и &lt;b&gt;верлетовские связи&lt;/b&gt;. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Самый простой способ почувствовать возможности движка – посмотреть демонстрации.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://wellcaffeinated.net/PhysicsJS/examples/#demo-1"&gt;&lt;b&gt;Демонстрации&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5078.clip_5F00_image004_5F00_19ABF7CB.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8510.clip_5F00_image004_5F00_thumb_5F00_4BD45578.png" width="629" height="298" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Также здесь находится документация.&lt;/p&gt;  &lt;p&gt;&lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki"&gt;&lt;b&gt;https&lt;/b&gt;&lt;b&gt;://&lt;/b&gt;&lt;b&gt;github&lt;/b&gt;&lt;b&gt;.&lt;/b&gt;&lt;b&gt;com&lt;/b&gt;&lt;b&gt;/&lt;/b&gt;&lt;b&gt;wellcaffeinated&lt;/b&gt;&lt;b&gt;/&lt;/b&gt;&lt;b&gt;PhysicsJS&lt;/b&gt;&lt;b&gt;/&lt;/b&gt;&lt;b&gt;wiki&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Вводные документы можно найти на &lt;a href="http://wellcaffeinated.net/PhysicsJS/examples/"&gt;сайте PhysicsJS&lt;/a&gt;. Эта статья википедии содержит инструкции по более сложному использованию.&lt;/p&gt;    &lt;p&gt;Из-за новизны этой библиотеки документацию к ней нельзя назвать исчерпывающей. Если вы запутаетесь, пожалуйста опишите проблему и &lt;a href="http://wellcaffeinated.net/PhysicsJS/examples/"&gt;свяжитесь со мной&lt;/a&gt;. Вы также можете самостоятельно редактировать вики-страницы, чтобы заполнить пробелы. Любая помощь с документацией приветствуется. &lt;/p&gt;    &lt;p&gt;&lt;a name="topics"&gt;&lt;/a&gt;&lt;b&gt;Разделы&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Fundamentals"&gt;Основы&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Scratchpads"&gt;Временная память&lt;/a&gt; – она ускоряет вычисления&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Bodies"&gt;Тела&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/PubSub"&gt;Публикация и подписка (PubSub)&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Behaviors"&gt;Поведения&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Collisions"&gt;Столкновения&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Integrators"&gt;Интеграторы&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="https://github.com/wellcaffeinated/PhysicsJS/wiki/Renderers"&gt;Рендереры&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;И исходник также доступен официально:&lt;/p&gt;  &lt;p&gt;&lt;a href="https://github.com/wellcaffeinated/PhysicsJS"&gt;&lt;b&gt;https://github.com/wellcaffeinated/PhysicsJS&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="https://github.com/wellcaffeinated/PhysicsJS"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4341.clip_5F00_image006_5F00_3F061128.png" width="628" height="432" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10495802" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Physics/">Physics</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/JavaScript/">JavaScript</category></item><item><title>Акустическое моделирование с помощью матрицы линий передач</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/28/acoustic-simulations-via-transmission-line-matrix.aspx</link><pubDate>Tue, 28 Jan 2014 07:04:37 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10493231</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10493231</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/28/acoustic-simulations-via-transmission-line-matrix.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний проект Кеннета Хогланда (Kenneth Haugland) необычен и не принадлежит к категории, о которой я часто пишу (или возможно вообще не пишу), но он привлекательный, интересный и c ним интересно поиграть.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.codeproject.com/Articles/661257/Transmission-Line-Matrix-for-acoustic-simulations"&gt;&lt;b&gt;Матрица линий передачи для акустического моделирования&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Моделирование акустических волн – тема повышенного интереса во многих областях, но это сложно сделать с минимальными затратами вычислительной мощности. Среди методов моделирования есть несколько кандидатов, каждый из них, как мы увидим, имеет свои плюсы и минусы. Одним из самых точных методов моделирования является метод матрицы линии передачи (Transmission Line Matrix, TLM), поскольку он способен смоделировать любую ситуацию с корректными входными условиями. Некоторые наиболее известные в акустике методы перечислены в списке:&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://en.wikipedia.org/wiki/Ray_tracing_%28physics%29"&gt;Алгоритм трассировки путей&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://en.wikipedia.org/wiki/Finite-difference_time-domain_method"&gt;FDTD – Finite Difference Time-Domain &lt;/a&gt;(метод конечных разностей во временной области)&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://en.wikipedia.org/wiki/Transmission-line_matrix_method"&gt;TLM – Transmission Line Matrix&lt;/a&gt; (матрица линии передачи)&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://en.wikipedia.org/wiki/Finite_element_method"&gt;FEM – Finite Element Method&lt;/a&gt; (метод конечных элементов)&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://en.wikipedia.org/wiki/Boundary_element_method"&gt;BEM – Boundary Element Method &lt;/a&gt;(метод граничных элементов)&lt;/p&gt;    &lt;p&gt;Трассировка лучей обычно используется при расчете акустики концертных залов, поскольку основная проблемная область (доступные частоты) часто попадает в диапазон, где применима трассировка лучей. В общем это доступно для области высоких частот, где может находится достаточно большая часть спектра. &lt;/p&gt;    &lt;p&gt;Так называемый метод конечных разностей во временной области (&lt;a href="http://en.wikipedia.org/wiki/Finite-difference_time-domain_method"&gt;Finite Difference Time Domain&lt;/a&gt;&lt;u&gt;, &lt;/u&gt;FDTD) в действительности точно такой же, как и TLM, поскольку первый решает волновое уравнение, в то время как TLM обеспечивает физическую модель распространения, это означает, что ограничения и преимущества одинаковы у обоих. Необходимо отметить, что TLM и FDTD могут использоваться как в акустике, так и в электродинамике, поскольку оба относятся к волнам, которые можно смоделировать с помощью напряжений и токов в электромагнетизме, а также давлений и скоростей частиц в акустике. &lt;/p&gt;    &lt;p&gt;Метод FEM очень популярен во многих коммерческих продуктах, и особенно полезен для моделирования волнового уравнения в области низких частот, поскольку этот метод должен иметь точки, согласующиеся с частотами, которые от моделирует. Метод FEM решает &lt;a href="http://en.wikipedia.org/wiki/Helmholtz_equation"&gt;волновое уравнение Гельмгольца&lt;/a&gt;, в котором сначала надо задать частоты, для которых вы желаете решить его.&lt;/p&gt;    &lt;p&gt;Метод BEM особенно популярен для нахождения точных решений частных задач, например, распространение звуковых волн через щели и другие отверстия. Он очень быстро сходится для разных геометрий, используется в простых случаях и в глубине является аналитическим.&lt;/p&gt;    &lt;p&gt;Цель данной статьи показать, как просто можно сделать волновое моделирование и насколько интуитивен процесс моделирования.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7357.image_5F00_39F603D9.png"&gt;&lt;img title="image" style="display: inline;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5684.image_5F00_thumb_5F00_545887A1.png" width="469" height="411" /&gt;&lt;/a&gt; &lt;a href="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5b2%5d-173.png"&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0336.image_5F00_08230EA4.png"&gt;&lt;img title="image" style="display: inline;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6574.image_5F00_thumb_5F00_32FE0367.png" width="477" height="411" /&gt;&lt;/a&gt; &lt;a href="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5b5%5d-101.png"&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Обязательно ознакомьтесь со всей статьей. В ней содержится много информации, подробностей и описание математического аппарата.&lt;/p&gt;  &lt;p&gt;Также доступен исходник (на VB.Net и C#), который у меня запустился сразу. Структура данного проекта проста, и позволяет сосредоточиться на реальных сложностях…&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2235.image_5F00_5DD8F82A.png"&gt;&lt;img title="image" style="display: inline;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0624.image_5F00_thumb_5F00_73C26A7A.png" width="654" height="285" /&gt;&lt;/a&gt; &lt;a href="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5b8%5d-83.png"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Замечание. Если вы ухватитесь за это, щелкните на закладке 2D. 3D только отображается (можно сказать, я потратил порядочно времени, пытаясь уйти с закладки 3D :/ )&lt;/p&gt;  &lt;p&gt;Хотя можно сразу приступить к живому моделированию, более интересно перед этим добавить источники, стены и т. д., а затем уже стартовать. &lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2630.image_5F00_7E825280.png"&gt;&lt;img title="image" style="display: inline;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7382.image_5F00_thumb_5F00_3E4EC9B7.png" width="474" height="411" /&gt;&lt;/a&gt; &lt;a href="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5b11%5d-63.png"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4682.image_5F00_0D4F190A.png"&gt;&lt;img title="image" style="display: inline;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6607.image_5F00_thumb_5F00_341FBFFB.png" width="474" height="411" /&gt;&lt;/a&gt; &lt;a href="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5b14%5d-52.png"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Итак, хотя это, возможно, не совсем то, что нужно большинству, код и вычисления довольно интересны, и бьюсь об заклад, мы многому можем научиться из этого проекта.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10493231" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2300_/">C#</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/VB-NET/">VB.NET</category></item><item><title>Не нужно прятаться от HID – сквозной проект сенсора движения для WinRT</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/22/no-need-to-hide-from-hid-end-to-end-windows-runtime-hid-motion-sensor.aspx</link><pubDate>Wed, 22 Jan 2014 19:25:05 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10491858</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10491858</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/22/no-need-to-hide-from-hid-end-to-end-windows-runtime-hid-motion-sensor.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний аппаратный пост имеет, с моей точки зрения, ряд замечательных и забавных возможностей. Кроме того, всё, что объединяет в себе Windows 8.1, Netduino, C# и возможность сказать «HID» не может быть совсем плохим, не правда ли?&lt;/p&gt;  &lt;p&gt;&lt;a href="http://code.msdn.microsoft.com/Sample-motion-sensor-39bea694"&gt;&lt;b&gt;Образец сенсора движения, микропрограммы и приложения &lt;/b&gt;&lt;b&gt;WinRT&lt;/b&gt;&lt;b&gt; для &lt;/b&gt;&lt;b&gt;HID&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Это сквозное решение включает руководство для построения простого пассивного инфракрасного сенсора, работающего по протоколу HID. Оно представлено документом, озаглавленным «&lt;a href="http://go.microsoft.com/fwlink/?LinkId=323542"&gt;Создание сенсора движения&lt;/a&gt;». Вместе с ним идет проект на Visual Studio C# с исходным кодом, предназначенный для создания микропрограммы сенсора.&lt;/p&gt;    &lt;p&gt;Вдобавок к руководству по созданию устройства, решение включает в себя пример приложения для Магазина, которое мониторит датчик на предмет обнаружения движения и снимает короткое пятисекундное видео в случае обнаружения движения. (Приложение описано во втором руководстве, озаглавленном «&lt;a href="http://go.microsoft.com/fwlink/?LinkId=323544"&gt;Разработка приложений с протоколом Human Interface Device (HID)&lt;/a&gt;».&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Замечание: &lt;/b&gt;Это сквозное решение использует ПО, произведенное по лицензии Creative Commons Attribution-ShareAlike 3.0 Unported License. Условия лицензии приведены &lt;a href="http://creativecommons.org/licenses/by-sa/3.0/"&gt;здесь&lt;/a&gt;. &lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Требования к операционной системе&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Клиент&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Windows 8.1&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Сервер&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;N/A&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Установка среды разработки для встраиваемого ПО&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Прежде ем загружать в Netduino Plus встраиваемое ПО, необходимо выполнить следующие шаги:&lt;/p&gt;    &lt;p&gt;· Установить на машине разработки Microsoft Visual C# Express 2010 &lt;/p&gt;    &lt;p&gt;· Установить .NET Micro Framework SDK v4.2 &lt;/p&gt;    &lt;p&gt;· Установить на плату Netduino Plus встраиваемо�� ПО Netduino Beta v4.1.1 &lt;/p&gt;    &lt;p&gt;· Загрузить проект встраиваемого ПО устройства и открыть его в Visual C# Express&lt;/p&gt;    &lt;p&gt;Заметьте, что это видео дает прекрасное объяснение процессу установки бета-версии ПО на плату Netduino. (См. сопутствующее руководство, объясняющее подробности сборки устройства и установки ПО.) &lt;/p&gt;    &lt;p&gt;&lt;b&gt;Сборка сенсора движения, основанного на &lt;/b&gt;&lt;b&gt;HID&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Сенсор движения состоит из платы разработки Netduino Plus с присоединенным пассивным инфракрасным сенсором (PIR). Детали сборки этого сенсора можно найти в документе, озаглавленном «&lt;a href="http://go.microsoft.com/fwlink/?LinkId=323542"&gt;Создание сенсора движения&lt;/a&gt;». Собрав сенсор, можно присоединить его к лэптопу на Windows 8.1 или планшету и запустить пример приложения.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Установка среды разработки для приложения Магазина&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Прежде чем собирать и запускать пример приложения, необходимо выполнить следующие шаги:&lt;/p&gt;    &lt;p&gt;· Установите Windows 8.1 на машину. &lt;/p&gt;    &lt;p&gt;· Установите Microsoft Visual Studio Professional 2013 или Microsoft Visual Studio Ultimate 2013. &lt;/p&gt;    &lt;p&gt;· Скачайте проект примера. Посмотрите сопровождающий документ «&lt;a href="http://go.microsoft.com/fwlink/?LinkId=323544"&gt;Разработка приложений с протоколом Human Interface Device (HID)&lt;/a&gt;», в котором можно найти подробности о приложении-примере. (Если на вашем компьютере не установлена видеокамера, возможно, вы захотите развернуть приложение на компьютере с видеокамерой.) &lt;/p&gt;    &lt;p&gt;&lt;b&gt;Сборка приложения-примера&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;После сборки сенсора движения можно приступить к его тестированию с помощью приложения-примера. Подробнее сборка приложения описана в руководстве (а также детали функционирования приложения). &lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Вот снимок документа «&lt;a href="http://go.microsoft.com/fwlink/?LinkId=323542"&gt;Создание сенсора движения&lt;/a&gt;».&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4377.clip_5F00_image002_5F00_166E15FF.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8171.clip_5F00_image002_5F00_thumb_5F00_22BBED8E.png" width="588" height="459" /&gt;&lt;/a&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Введение&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;С добавлением в Windows 8.1 нового &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.humaninterfacedevice.aspx"&gt;HID WinRT API&lt;/a&gt; Microsoft предоставила ученым, энтузиастам и инженерам замечательную платформу для соединения удаленных устройств с планшетами и лэптопами. Новый API упрощает интеграцию широкого спектра устройств: от измерительного оборудования в исследовательских лабораториях до станций, следящих за погодой, медицинских приборов и тренировочного оборудования.&lt;/p&gt;    &lt;p&gt;Единой чертой всех этих устройств является поддержка протокола HID. На ранних стадиях этот протокол применялся для связи с клавиатурами, мышками и джойстиками – устройствами, выступавшими в качестве интерфейса между компьютером и человеком. Отсюда и название «Human Interface Device» или HID.&lt;/p&gt;    &lt;p&gt;Однако из-за того, что протокол является самоописывающим, он оказался идеальным для поддержки большого круга других устройств (под самоописывающим подразумевается, что HID-устройство представляется самостоятельно: назначение, возможности, размер пакета при соединении с ведущим ПК). &lt;/p&gt;    &lt;p&gt;Сенсор движения описывается в этой статье как учебный инструмент – его и соответствующее ПО можно использовать для изучения протокола HID и нового WinRT API. Сенсор спроектирован для работы с приложением &lt;b&gt;HidInfraredSensor&lt;/b&gt;, предоставляемым в качестве образца в современном SDK.&lt;/p&gt;    &lt;p&gt;Если вы новичок в работе с протоколом HID или транспортом USB, то замечательной начальной точкой станет книга Яна Эксельсона (Jan Axelson) «USB Complete». Прочтите главы, посвященные HID, прежде чем погружаться в детали встраиваемого ПО. Другим полезным источником информации является форум разработчиков на сайте &lt;a href="http://www.usb.org/developers"&gt;usb.org&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Быстрое начало&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В этом разделе документа собрана информация, которая поможет быстро собрать и запустить сенсор движения. Он спроектирован, чтобы работать с приложением-примером &lt;b&gt;HidInfraredSensor&lt;/b&gt;, входящим в галерею примеров MSDN для Windows 8.1. Этот пример мониторит или прослушивает события регистрации движения от сенсора. Когда случается событие и регистрируется движение, приложение записывает короткое видео, используя встроенную в устройство веб-камеру.&lt;/p&gt;    &lt;p&gt;Приложение следит за событиями, используя новый &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.humaninterfacedevice.aspx"&gt;HID WinRT API&lt;/a&gt;; а видео записывается с помощью &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.media.capture.aspx"&gt;MediaCapture API&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;(Более подробно о внутренней работе устройства можно узнать из описания встраиваемого ПО в этом документе.)&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6180.clip_5F00_image004_5F00_100DE443.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3250.clip_5F00_image004_5F00_thumb_5F00_59E9199B.png" width="629" height="420" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Наконец перейдем к коду...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3443.clip_5F00_image006_5F00_05C11F9E.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7608.clip_5F00_image006_5F00_thumb_5F00_0961CB2C.png" width="297" height="484" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;...соберем и запустим его...&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;Сборка приложения-примера&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;После сборки сенсора движения можно приступить к его тестированию с помощью приложения-примера. Подробности сборки приложения (а также детали его функционирования) находятся в руководстве по приложению.&lt;/p&gt;    &lt;p&gt;Прочитав документ и установив исходники приложения, можно приступить к его сборке:&lt;/p&gt;    &lt;p&gt;1. Запустите Microsoft Visual Studio 2013 и выберите &lt;b&gt;File&lt;/b&gt; &amp;gt; &lt;b&gt;Open&lt;/b&gt; &amp;gt;&lt;b&gt;Project/Solution&lt;/b&gt;. &lt;/p&gt;    &lt;p&gt;2. Перейдите в каталог, в который вы разархивировали пример. Зайдите в каталог с именем приложения и дважды щелкните на файле решения (.sln). &lt;/p&gt;    &lt;p&gt;3. Нажмите F7 или воспользуйтесь меню &lt;b&gt;Build&lt;/b&gt; &amp;gt; &lt;b&gt;Build&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Solution&lt;/b&gt; для сбрки примера. &lt;/p&gt;    &lt;p&gt;4. Включите плату Netduino с помощью внешнего источника питания. &lt;/p&gt;    &lt;p&gt;5. Подождите несколько секунд пока сенсор не инициализируется (инфракрасному сенсору необходимо около 10 сек, чтобы определить уровень окружающего инфракрасного излучения). &lt;/p&gt;    &lt;p&gt;6. Присоединить плату Netduino к планшету или лэптопу USB-кабелем. &lt;/p&gt;    &lt;p&gt;7. Из работающей Visual Studio с открытым проектом примера можно запустить приложение либо под отладчиком, либо без отладки (для отладки нажмите клавишу F5 или в меню выберите &lt;b&gt;Debug&lt;/b&gt; &amp;gt; &lt;b&gt;Start&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Debugging&lt;/b&gt;. Для запуска без отладки нажмите Ctrl+F5 или &lt;b&gt;Debug&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&amp;gt; &lt;b&gt;Start&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Without&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Debugging&lt;/b&gt;.) &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;И вот у вас есть сквозное HID-решение для Windows 8.1...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Tags/windows-8.1"&gt;&amp;#160;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10491858" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/-NET+Microframework/">.NET Microframework</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/WinRT/">WinRT</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/WIndows+8-1/">WIndows 8.1</category></item><item><title>О строки, строки, из каких символов вы собраны… «Visual Studio String Debug Visualizer»</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/18/string-oh-string-what-a-character-you-are-171-visual-studio-string-debug-visualizer-187.aspx</link><pubDate>Sat, 18 Jan 2014 12:16:41 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10490787</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>2</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10490787</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/18/string-oh-string-what-a-character-you-are-171-visual-studio-string-debug-visualizer-187.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Про расширяемость Visual Studio в последнее время было опубликовано много постов, что означает – пора бы написать о чем-то другом...&lt;/p&gt;  &lt;p&gt;Но не сегодня &lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5187.clip_5F00_image002_5F00_76B970E6.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7674.clip_5F00_image002_5F00_thumb_5F00_26771966.png" width="28" height="30" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Когда я увидел сегодняшний проект Дэвида Мишнера (David Michener), я похолодел. Это помогло бы сохранить мне в прошлом часы и часы работы. Это просто, но оглядываясь назад, очевидно насколько полезно и необходимо… &lt;/p&gt;  &lt;p&gt;&lt;a href="https://vsstringdebugvisualizer.codeplex.com/"&gt;&lt;b&gt;Visual&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Studio&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;String&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Debug&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Visualizer&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Этот отладочный визуализатор строк для Visual Studio 2012 показывает шестнадцатеричные значения выбранной строки и текст в отдельном окне, выявляя скрытые данные. Это полезно, например, при работе с данными, считанными из файла, поступившего из *nix-системы и содержащего другие символы конца строк (CR, а не CR/LF).&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1588.clip_5F00_image004_5F00_28476F2D.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6523.clip_5F00_image004_5F00_thumb_5F00_346E0AB6.png" width="610" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Для использования визуализатора с другими версиями Visual Studio просто измените ссылки Microsoft.VisualStudio.DebuggerVisualizers на версию, которая соответствует вашей версии Visual Studio.&lt;/p&gt;    &lt;p&gt;Как установить:&lt;/p&gt;    &lt;p&gt;1. Либо скомпилируйте исходник, либо &lt;a href="https://vsstringdebugvisualizer.codeplex.com/downloads/get/729904"&gt;скачайте&lt;/a&gt; исполняемый файл.&lt;/p&gt;    &lt;p&gt;2. Скопируйте скомпилированный исполняемый файл (&amp;lt;home&amp;gt;\StringVisualizer\bin\Debug\StringVisualizer.dll) или загруженный файл в &amp;lt;MyDocuments&amp;gt;\Visual Studio 2012\Visualizers&lt;/p&gt;    &lt;p&gt;3. Перезапустите Visual Studio. &lt;/p&gt;    &lt;p&gt;При отладке проекта можно навести мышь на строковую переменную и выбрать «Advanced String Visualizer» из значка с лупой во всплывающей подсказке, или же выбрать тот же значок с лупой в окнах Locals или Autos. &lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0218.clip_5F00_image006_5F00_52DD6D01.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6505.clip_5F00_image006_5F00_thumb_5F00_4BC0C13A.png" width="442" height="159" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Значительно лучше то, что Дэвид предоставил и исходники...&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2678.clip_5F00_image008_5F00_21E04D05.png"&gt;&lt;img title="clip_image008" style="display: inline;" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3704.clip_5F00_image008_5F00_thumb_5F00_2F48F0BC.png" width="340" height="375" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Как видно, они не являются сложными и запутанными, и в этом их прелесть.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7382.clip_5F00_image010_5F00_79D2BF47.png"&gt;&lt;img title="clip_image010" style="display: inline;" border="0" alt="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1300.clip_5F00_image010_5F00_thumb_5F00_39330389.png" width="654" height="428" /&gt;&lt;/a&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3007.clip_5F00_image012_5F00_03BCD215.png"&gt;&lt;img title="clip_image012" style="display: inline;" border="0" alt="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5826.clip_5F00_image012_5F00_thumb_5F00_7580E9D5.png" width="361" height="484" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Простые, легкие в понимании и работающие, они отвечают поставленным требованиям. &lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8686.clip_5F00_image0021_5F00_2E2E2494.png"&gt;&lt;img title="clip_image002[1]" style="display: inline;" border="0" alt="clip_image002[1]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3005.clip_5F00_image0021_5F00_thumb_5F00_1B792ADD.png" width="28" height="30" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1108.clip_5F00_image014_5F00_1DB5B399.png"&gt;&lt;img title="clip_image014" style="display: inline;" border="0" alt="clip_image014" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2605.clip_5F00_image014_5F00_thumb_5F00_41DD9ED9.png" width="629" height="388" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10490787" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio/">Visual Studio</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2300_/">C#</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio+extensibility/">Visual Studio extensibility</category></item><item><title>Практическая серия «От устройства к облаку»</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/17/hands-on-device-to-cloud-series.aspx</link><pubDate>Fri, 17 Jan 2014 17:32:36 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10490633</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10490633</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/17/hands-on-device-to-cloud-series.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний аппаратный пост посвящен серии видео на Channel 9, которую я хочу представить всем вам – &lt;a href="http://channel9.msdn.com/Blogs/Subscribe"&gt;Clemens Vasters' Subscribe!&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Blogs/Subscribe/Device-to-Cloud-Hands-On-Part-1-Prototyping-Platforms"&gt;&lt;b&gt;От устройства к облаку. Практика. &lt;/b&gt;&lt;b&gt;Часть 1. Платформы прототипирования&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5658.clip_5F00_image002_5F00_1F44A19F.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5001.clip_5F00_image002_5F00_thumb_5F00_321E46AB.png" width="629" height="331" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Видеоблог Subscribe! возвращается после долгого перерыва с новым сериалом.&lt;/p&gt;    &lt;p&gt;Начиная с этого эпизода я собираюсь проанализировать ряд платформ прототипирования встраиваемых систем и, в конечном счете, выяснить, как соединить компактные устройства с облаком с точки зрения функциональности, масштабирования и безопасности. Мы изучим, как установить базовое соединение, обсудим параметры безопасности, поговорим о том, как передавать телеметрические данные и управлять ими, и как реализовать удаленное переключение вроде включения мотора или переключения света из облака, и что делать, когда необходимо масштабировать решение на много-много устройств в плохих условиях соединения.&lt;/p&gt;    &lt;p&gt;Платформы прототипирования позволяют любителям, исследователям и промышленным инженерам-конструкторам изучать дизайн, собирать и программировать устройства специального назначения без пайки и без необходимости заказывать печатную плату. Если конструкция стабильна, прототип можно преобразовать в реальное устройство для массового производства.&lt;/p&gt;    &lt;p&gt;В этой серии я собираюсь дать обзор платформ протитипирования, которые я буду изучать в следующие несколько недель. Первоначально я собирался сосредоточиться на недорогих платформах, имеющих развитые сообщества, с которыми можно при желании поиграть: &lt;a href="http://arduino.cc/"&gt;Arduino&lt;/a&gt;, &lt;a href="http://www.netmf.com/gadgeteer/"&gt;Gadgeteer&lt;/a&gt;, &lt;a href="http://netduino.com/"&gt;Netduino&lt;/a&gt;, &lt;a href="http://developer.android.com/tools/adk/index.html"&gt;Android ADK&lt;/a&gt;, &lt;a href="http://www.seeedstudio.com/wiki/GROVE_System"&gt;Seeedstudio Grove&lt;/a&gt; и &lt;a href="http://raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt;. Позже я также включил в рассмотрение платформы прототипирования и оценки для промышленных микроконтроллеров.&lt;/p&gt;    &lt;p&gt;Сегодня и в следующих нескольких эпизодах я буду работать с платой &lt;a href="http://arduino.cc/en/Main/ArduinoBoardEthernet"&gt;Arduino Ethernet&lt;/a&gt;, которую я приобрел как часть набора &lt;a href="http://shop.fritzing.org/products/fritzing-starter-kit-with-arduino-ethernet"&gt;Fritzing Starter Kit&lt;/a&gt;. &lt;a href="http://fritzing.org/"&gt;Fritzing.org&lt;/a&gt; – инициатива конструирования устройств с открытой аппаратной частью, выдвинутая Interaction Design Lab университета прикладных наук Потсдама, Германия.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Blogs/Subscribe/Device-to-Cloud-Hands-On-Part-2-Pattern-Overview-and-Commands-with-HTTP"&gt;&lt;b&gt;От устройства к облаку. Практика. &lt;/b&gt;&lt;b&gt;Часть 2: &lt;/b&gt;&lt;b&gt;Обзор&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;шаблонов&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;и&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;команд&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;с&lt;/b&gt;&lt;b&gt; HTTP&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Во втором эпизоде серии «От устройства к облаку» мы побеседуем о четырех основных шаблонах обмена информацией между устройствами и начнем изучать самый сложный из них – команды, используя простой веб-сервис на основе HTTP на плате Arduino Ethernet.&lt;/p&gt;    &lt;p&gt;Четыре основных шаблона – это телеметрия, запросы, команды и оповещения.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Blogs/Subscribe/Device-to-Cloud-Hands-On-Part-3-Safer-Commands-via-a-Cloud-Gateway"&gt;&lt;b&gt;От устройства к облаку. Практика. Часть 3: безопасные команды с помощью облачного шлюза&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;В третьем эпизоде серии мы подробнее обсудим, почему разрешение небольшим устройствам активно прослушивать сеть и, таким образом, раскрывать себя для непрошенного трафика является сомнительной, а порой и откровенно опасной стратегией.&lt;/p&gt;    &lt;p&gt;В качестве контрпредложения я покажу очень простую модель, как создать намного более безопасный способ (пусть и не полностью, мы вернемся к этому вопросу в будущем) объявления устройства в публичной сети пользователей посредством использования облачного шлюза, действующего от имени устройства и берущего на себя львиную долю работы в терминах реализации протокола, а также защиту от нежелательного трафика. &lt;/p&gt;&lt;/blockquote&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10490633" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Hardware/">Hardware</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Windows+Azure/">Windows Azure</category></item><item><title>Сохраните благоразумие с помощью сниппетов</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/14/saving-your-sanity-with-snippets.aspx</link><pubDate>Tue, 14 Jan 2014 12:06:15 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10489578</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10489578</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/14/saving-your-sanity-with-snippets.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;На прошлой неделе я писал о сохранении трудозатрат. Вас это может удивить, но так как тема мне нравится, я вновь возвращаюсь к ней. &lt;/p&gt;  &lt;p&gt;Да, я уже слышу: «Ну и что же здесь интересного, Грэг?»&lt;/p&gt;  &lt;p&gt;Ну, может это и не интересно-интересно. Нет роботов, не самый передний край технологий, но я расскажу о том, что, хотя и не интересно, но позволяет использовать один и тот же код снова и снова. Циклы, установки свойств, пользовательские куски кода, общие шаблоны T-SQL и т. д. Вы понимаете, о чем я? Об одинаковых кусках кода, которые вы можете постоянно копировать-вставлять-настраивать. Или о группах операторов, которые вы набираете так часто, что не задумываетесь об этом, мышечная память настолько крепка, что можно делать это с закрытыми глазами.&lt;/p&gt;  &lt;p&gt;«Грэг, постой! Мы и так все знаем о сниппетах! В Visual Studio множество…»&lt;/p&gt;  &lt;p&gt;Правильно, так и есть. Но разве каждый знает, что это лишь начальная точка, а не конец пути. Настоящее развлечение начинается, когда приступаешь к созданию собственных сниппетов…&lt;/p&gt;  &lt;p&gt;&lt;a href="https://snippetdesigner.codeplex.com/"&gt;&lt;b&gt;Конструктор сниппетов&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Конструктор сниппетов – это плагин, улучшающий Visual Studio IDE и обеспечивающий большие возможности по работе со сниппетами. &lt;/p&gt;    &lt;p&gt;&lt;b&gt;Последние новости&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://matthewmanela.com/blog/snippet-designer-now-supports-c/"&gt;&lt;b&gt;Конструктор сниппетов теперь поддерживает &lt;/b&gt;&lt;b&gt;C&lt;/b&gt;&lt;b&gt;++&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;b&gt;....&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href="https://snippetdesigner.codeplex.com/releases/view/111520"&gt;Snippet Designer 1.5.0&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Журнал изменений для версии&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;1.5.0&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· Добавлена поддержка Visual Studio 2013&lt;/p&gt;    &lt;p&gt;· Исправлены некоторые опечатки&lt;/p&gt;    &lt;p&gt;· Исправлен пользовательский каталог для SQL-сниппетов&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Требования&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· Visual Studio 2013&lt;/p&gt;    &lt;p&gt;· Visual Studio 2012&lt;/p&gt;    &lt;p&gt;· Visual Studio 2010&lt;/p&gt;    &lt;p&gt;· Visual Studio 2008&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Возможности&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· Редактор сниппетов встроен внутрь IDE, которая поддерживает &lt;b&gt;C&lt;/b&gt;&lt;b&gt;#&lt;/b&gt;, &lt;b&gt;Visual&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Basic&lt;/b&gt;, &lt;b&gt;JavaScript&lt;/b&gt;, &lt;b&gt;HTML&lt;/b&gt;, &lt;b&gt;XML&lt;/b&gt; и &lt;b&gt;SQL&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;o Доступ к нему с помощью открытия файла any.snippet или с помощью меню File -&amp;gt; New -&amp;gt; File -&amp;gt; Code Snippet File&lt;/p&gt;    &lt;p&gt;o Он использует тот же редактор кода Visual Studio, так что вы можете писать сниппеты в той же среде, в которой пишете основной код.&lt;/p&gt;    &lt;p&gt;o Он позволяет просто обозначать замены через удобное меню, вызываемое щелчком правой клавиши мыши.&lt;/p&gt;    &lt;p&gt;o Он отображает свойства сниппета в окне свойств Visual Studio.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0675.clip_5F00_image002_5F00_3CDC2882.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7080.clip_5F00_image002_5F00_thumb_5F00_1774C5C5.png" width="629" height="394" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Окно Snippet Explorer предназначено для поиска сниппетов на компьютере.&lt;/p&gt;    &lt;p&gt;· Оно расположено в View -&amp;gt; Other Windows -&amp;gt; Snippet Explorer&lt;/p&gt;    &lt;p&gt;· Это окно содержит блок предварительного просмотра кода, который позволяет заглянуть в сниппет не открывая файла. &lt;/p&gt;    &lt;p&gt;· Поддерживается индекс сниппетов на компьютере для быстрого поиска.&lt;/p&gt;    &lt;p&gt;· Обеспечивается быстрый способ найти сниппет для использования, редактирования или уничтожения.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0083.clip_5F00_image004_5F00_169EF08C.jpg"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4744.clip_5F00_image004_5F00_thumb_5F00_08CF3B42.jpg" width="423" height="720" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Щелчок правой клавишей мыши и переход на пункт меню «Export as Snippet» добавляет помеченный фрагмент из редактора кода C#, VB, XML, JavaScript, HTML и SQL напрямую в редактор сниппетов.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0410.clip_5F00_image006_5F00_05BCDD4D.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1768.clip_5F00_image006_5F00_thumb_5F00_374ADB93.png" width="522" height="459" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Правда потрясающе? Также доступен &lt;a href="https://snippetdesigner.codeplex.com/SourceControl/latest"&gt;исходник&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0652.clip_5F00_image008_5F00_16C62C92.png"&gt;&lt;img title="clip_image008" style="display: inline;" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8182.clip_5F00_image008_5F00_thumb_5F00_3AEE17D2.png" width="314" height="139" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8475.clip_5F00_image010_5F00_3128B05A.png"&gt;&lt;img title="clip_image010" style="display: inline;" border="0" alt="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0511.clip_5F00_image010_5F00_thumb_5F00_62B6AEA0.png" width="268" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Что? Вы не только используете Visual Studio, но также живете в SQL Server 2012 Management Studio? Думаете сниппеты там также пригодятся?&lt;/p&gt;  &lt;p&gt;&lt;a href="https://snippetsgen.codeplex.com/"&gt;&lt;b&gt;Генератор сниппетов для &lt;/b&gt;&lt;b&gt;SQL&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Server&lt;/b&gt;&lt;b&gt; 2012&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Сниппеты T-SQL – это очень удобная новая возможность SQL Server 2012.&lt;/p&gt;    &lt;p&gt;Используя сниппеты кода можно сохранить время при написании кода просто вводя код, выполняющий общие задачи. Повторное использование кода всегда полезно, поскольку увеличивает производительность!&lt;/p&gt;    &lt;p&gt;В SQL Server 2012 можно импортировать собственноручно написанные сниппеты. Однако перед этим, нужно создать сниппет.&lt;/p&gt;    &lt;p&gt;Каждый сниппет представляет собой XML-файл, содержащий некоторую заголовочную информацию, касающуюся всего сниппета, за которым следует коде на T-SQL.&lt;/p&gt;    &lt;p&gt;Пример такого сниппета на T-SQL для SQL Server 2012 приведен на следующем рисунке:&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3527.clip_5F00_image012_5F00_5B2DCFE4.png"&gt;&lt;img title="clip_image012" style="display: inline;" border="0" alt="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2577.clip_5F00_image012_5F00_thumb_5F00_0CBBCE2B.png" width="629" height="370" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Используя &lt;b&gt;Генератор сниппетов&lt;/b&gt;, можно создавать сниппеты на T-SQL, сохранять их в каталоге и затем добавлять этот каталог, и, соответственно, все ваши сниппеты, в SQL Server 2012 Management Studio (SSMS) с помощью Code Snippets Manager! Имя каталога станет именем категории сниппетов в Code Snippet Manager, а содержать он будет ваши сниппеты!&lt;/p&gt;    &lt;p&gt;Можно либо создать сниппет по эскизу, либо использовать один из шаблонов, поставляемых с пакетом, чтобы помочь пользователям разработать собственный сниппет.&lt;/p&gt;    &lt;p&gt;Кроме того, можно открыть существующий сниппет и на его основе создать новый.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3835.clip_5F00_image014_5F00_3E49CC71.png"&gt;&lt;img title="clip_image014" style="display: inline;" border="0" alt="clip_image014" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4477.clip_5F00_image014_5F00_thumb_5F00_171213ED.png" width="629" height="417" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2843.clip_5F00_image016_5F00_41ED08B0.png"&gt;&lt;img title="clip_image016" style="display: inline;" border="0" alt="clip_image016" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5367.clip_5F00_image016_5F00_thumb_5F00_6CC7FD73.png" width="629" height="417" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Ах да, исходник проекта доступен. Он не слишком сложен, но порой это и хорошо…&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10489578" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio/">Visual Studio</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/SQL+Server+Management+Studio/">SQL Server Management Studio</category></item><item><title>Проекты домашней автоматизации на Netduino (для лентяев)</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/13/171-netduino-home-automation-projects-for-lazy-boys-187.aspx</link><pubDate>Mon, 13 Jan 2014 08:37:40 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10489212</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10489212</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/13/171-netduino-home-automation-projects-for-lazy-boys-187.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшнее сообщение пришло от друга этого блога Мэтта Каванаха (Matt Cavanagh) и это не один проект, а целая пачка!&lt;/p&gt;  &lt;p&gt;Я редко пишу здесь о книгах, но когда Мэтт сообщил мне о выходе его новой книги… И прекрасно, что в ней есть бесплатная глава!&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.packtpub.com/netduino-home-automation-projects-for-lazy-boys/book"&gt;&lt;b&gt;Проекты домашней автоматизации на &lt;/b&gt;&lt;b&gt;Netduino&lt;/b&gt;&lt;b&gt; (для лентяев)&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1780.clip_5F00_image002_5F00_59392CF4.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7853.clip_5F00_image002_5F00_thumb_5F00_19FD9408.png" width="380" height="459" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;Автоматизировать свой дом с помощью Netduino и набора простых компонентов&lt;/li&gt;      &lt;li&gt;Изучить основы Netduino для его применения практически в любом проекте&lt;/li&gt;      &lt;li&gt;Создавать интересные проекты от самополивающихся растений до самодельного алкотестера&lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;&lt;b&gt;Что вы узнаете из этой книги&lt;/b&gt;&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;как написать простой код для Netduino&lt;/li&gt;      &lt;li&gt;как с помощью микрофона определить уровень шума в комнате&lt;/li&gt;      &lt;li&gt;как запитать датчики и другие компоненты от внешних источников питания&lt;/li&gt;      &lt;li&gt;как управлять существующими в доме устройствами с помощью транзисторов и реле&lt;/li&gt;      &lt;li&gt;как подсоединить смартфон к Netduino с помощью Bluetooth&lt;/li&gt;      &lt;li&gt;как определить количество алкоголя в выдохе&lt;/li&gt;      &lt;li&gt;как использовать сервомоторы для управления физическими объектами&lt;/li&gt;      &lt;li&gt;как использовать матричную панель для обеспечения безопасности дома и многое другое.&lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;&lt;b&gt;Подробнее&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В последние годы электроника прошла путь от чего-то, понятного только инженерам до распространенного хобби, доступного всем. Netduino появился как часть этой революции, предоставляя плату разработки, которую легко использовать и давая возможность существующим .NET-разработчикам применить имеющиеся знания.&lt;/p&gt;    &lt;p&gt;Большинство разработчиков имеет множество замечательных идей по поводу гаджетов, которые можно создать, чтобы сделать существующий мир лучше (или проще), но они не знают, как пройти дальше мигания светодиодами. Эта книга содержит больше, чем множество аналогичных книг, давая более глубокий обзор использования Netduino для практических проектов. &lt;/p&gt;    &lt;p&gt;Книга начинается с проекта «Hello, world!» электроники – плавное включение и выключение светодиодов. Она проведет вас через все основы, включая тему контроля широкого спектра электронных датчиков.&lt;/p&gt;    &lt;p&gt;Вы научитесь, как просто автоматизировать разные части дома. Вы узнаете, как открыть ворота с помощью смартфона, автоматически поливать растения, получить email, когда кто-то вторгнулся на вашу территорию, подсоединить клавиатуру для открытия двери, сделать собственный алкотестер, управлять домашним театром и многое другое!&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Подход&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Книга «Netduino Home Automation Projects for Lazy Boys» написана в практическом и дружественном ключе. Ее чтение будет занимательным и поучительным.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Для кого эта книга&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Эта книга идеально подходит для всех, кто интересуется домашней автоматизацией, имеет некоторый опыт в C# и использовал Netduino, но хочет освоить более сложные темы. Однако она начинается с обсуждения базисных вещей, поэтому будет полезна даже для новичков.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Вот цитата Матта:&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;За исключением обсуждения свойств Netduino, несколько глав посвящены коммуникациям с Bluetooth + WP8.&lt;/p&gt;    &lt;p&gt;Третья глава доступна бесплатно и детально описывает, как связать WP8 с Netduino: &lt;a href="http://www.packtpub.com/sites/default/files/9781849697828-Chapter-03.pdf?utm_source=packtpub&amp;amp;utm_medium=free&amp;amp;utm_campaign=pdf"&gt;http://www.packtpub.com/sites/default/files/9781849697828-Chapter-03.pdf?utm_source=packtpub&amp;amp;utm_medium=free&amp;amp;utm_campaign=pdf&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10489212" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/_23043C043D044B043904_+_34043E043C04_/">Умный дом</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/home+automation/">home automation</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Netduino/">Netduino</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Automation/">Automation</category></item><item><title>Сохраните немного трудозатрат при создании модульных тестов</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/09/saving-you-some-labor-in-creating-your-unit-tests.aspx</link><pubDate>Thu, 09 Jan 2014 08:19:00 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10489197</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10489197</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2014/01/09/saving-you-some-labor-in-creating-your-unit-tests.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/posts/Introducing-the-Unit-Test-Generator-for-Visual-Studio"&gt;Теперь добавлено полное видео на Channel 9&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодня речь пойдет о проекте, немного экономящим усилия при создании модульных тестов. Вспомним клик правой клавишей, создать модульные тесты в VS2012? Как насчет такого же подхода, но поддерживающего не только MSTest, но и XUnit и NUnit?&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/08/27/visual-studio-unit-test-generator-v1-lands.aspx"&gt;&lt;b&gt;Visual Studio Unit Test Generator v1 “&lt;/b&gt;&lt;b&gt;прибыл&lt;/b&gt;&lt;b&gt;”&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;p&gt;Группа ALM Rangers рада объявить о прибытии Visual Studio Unit Test Generator v1.&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;&lt;b&gt;Ищете генератор кода модульных тестов?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Генератор модульных тестов Visual Studio помогает увеличить продуктивность разработчиков, сокращая установочные работы по созданию новых модульных тестов. Он берет на себя рутинные задачи по созданию тестов, позволяя разработчику сосредоточиться на задачах более высокого уровня, на написании самих тестов.&lt;/p&gt;    &lt;p&gt;Генератор модульных тестов Visual Studio обеспечивает создание и настройку проекта тестирования, классов тестирования и заглушки тестирования, давая возможность более оперативного написания собственно тестов. Он обеспечивает набор возможностей по настройке, который позволяет привязать генерацию к существующим организационным схемам и схемам наименования. Также он полностью настраиваемый для поддержки MSTest, XUnit, и NUnit, так что можно выбрать платформу тестирования, наиболее удобную для вашего случая.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Положения проекта&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Команда следовала следующим принципам при проектировании и разработке проекта:&lt;/p&gt;    &lt;p&gt;· Достичь умеренной степени восстановления функциональности Visual Studio 2010 &lt;/p&gt;    &lt;p&gt;· Заменить, а не воскрешать устаревшие возможности.&lt;/p&gt;    &lt;p&gt;· Поддержка тестовых платформ .NET MS-Test, NUnit и XUnit и генерация кода VB/C#.&lt;/p&gt;    &lt;p&gt;· Предоставить «справочную реализацию» того, как выполнить задачу на конкретной платформе тестирования.&lt;/p&gt;    &lt;p&gt;· Обеспечить базовую инфраструктуру и точки расширения.&lt;/p&gt;    &lt;p&gt;· Фокусироваться на проекте и управлении ссылками, а не на генерации кода.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/45208924-e7b0-45df-8cff-165b505a38d7"&gt;&lt;b&gt;Генератор модульных тестов&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Группа Visual Studio ALM Rangers ускорила принятие Visual Studio с нестандартными решениями для отсутствующих функций и руководством для сообщества ALM. &lt;/p&gt;    &lt;p&gt;После установки вы обнаружите расширение в меню «Инструменты» в разделе «Расширения и обновления».&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3414.clip_5F00_image002_5F00_446FC600.png"&gt;&lt;img title="clip_image002" style="display: inline;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8637.clip_5F00_image002_5F00_thumb_5F00_5AC56B45.png" width="348" height="48" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Щелкните правой клавишей мыши внутри своего метода и выберите пункт «&lt;b&gt;Generate&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Unit&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Test&lt;/b&gt;&lt;b&gt;»&lt;/b&gt;.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8270.clip_5F00_image004_5F00_31512A05.png"&gt;&lt;img title="clip_image004" style="display: inline;" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1373.clip_5F00_image004_5F00_thumb_5F00_7527EF0D.png" width="348" height="131" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Будет сгенерирован тестовый проект и, при необходимости, тестовый класс, а затем добавлены ссылки, пространства имен и тестовые методы.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4762.clip_5F00_image006_5F00_00540A09.png"&gt;&lt;img title="clip_image006" style="display: inline;" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0523.clip_5F00_image006_5F00_thumb_5F00_6AF8E551.png" width="379" height="257" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Из &lt;a href="https://vsarguidance.codeplex.com/downloads/get/722151"&gt;Краткого обзора генератора модульных тестов.pdf&lt;/a&gt; (более подробная документация располагается здесь &lt;a href="https://vsarguidance.codeplex.com/releases/view/111316"&gt;v1 Unit Test Generator Documentation&lt;/a&gt;)&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;Можно создать дополнительные методы тестирования, повторив тот же процесс внутри того же метода.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Преимущества&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· Быстрое написание тестового кода, не заботясь о настройках проектов и файлов.&lt;/p&gt;    &lt;p&gt;· Настройка генерации кода модульного теста с помощью контекстного меню, обеспечивающего уверенность в соответствии сгенерированного теста принятым схемам наименования.&lt;/p&gt;    &lt;p&gt;· Генерация заглушек модульного теста в случае множества платформ и возможность использования любой платформы по выбору.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Требования&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· Visual Studio 2012 Professional или более старшая версия      &lt;br /&gt;· Visual Studio 2013 Professional или более старшая версия&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Удачи!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10489197" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio/">Visual Studio</category></item><item><title>Воcстановление в Outlook 2013 некоторых функций Outlook 2010 с помощью надстройки</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/12/24/bringing-some-outlook-2010-features-into-2013-with-this-add-in.aspx</link><pubDate>Tue, 24 Dec 2013 03:50:31 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10484421</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10484421</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/12/24/bringing-some-outlook-2010-features-into-2013-with-this-add-in.aspx#comments</comments><description>&lt;h3&gt;&lt;/h3&gt;  &lt;p&gt;Не знаю, как вас, но меня убивает отсутствие в Outlook 2013 некоторых вещей, несмотря на множество новых симпатичных возможностей. Например, уведомления о письмах (невозможно удалить сообщение в уведомлении) и будущие встречи (невозможно увидеть встречи, которые последуют завтра и далее). Но прекрасной че��той Office и Outlook является то, что их можно программировать. Если что-то пропущено, это можно легко вернуть назад! Именно это и сделал автор сегодняшнего проекта… &lt;/p&gt;  &lt;p&gt;Лучше всего, что он обнародовал исходники. &lt;img alt="Smiley" src="http://ecn.channel9.msdn.com/o9/content/images/emoticons/emotion-1.gif?v=c9" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="https://outlook2013addin.codeplex.com/"&gt;&lt;b&gt;Надстройка &lt;/b&gt;&lt;b&gt;Outlook&lt;/b&gt;&lt;b&gt; 2013&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: rgb(246, 245, 233);"&gt;   &lt;p&gt;Добавляет расширенный календарь встреч, чтобы видеть события на несколько дней вперед, и улучшенную систему оповещений о сообщениях, чтобы уничтожать или помечать флагом входящие письма. &lt;/p&gt;    &lt;p&gt;Этот проект появился потому, что после перехода на новый Outlook 2013 множество прекрасных и полезных возможностей оказалось странным образом «потеряно» при переходе с версии 2010 или даже 2007.&lt;/p&gt;    &lt;p&gt;Он стартовал как персональный проект, чтобы восстановить эти возможности для моей повседневной работы, но некоторые коллеги заинтересовались им, поэтому я включил его в Codeplex, чтобы каждый мог скачать и повозиться с ним, если понравиться. Вы можете абсолютно свободно скачать его и делать с кодом, что захотите, который, кстати, поставляется «как есть» &lt;img alt="Wink" src="http://ecn.channel9.msdn.com/o9/content/images/emoticons/emotion-5.gif?v=c9" /&gt;&lt;/p&gt;    &lt;p&gt;Если вы посчитаете его полезным и располагаете свободным временем, черкните мне строчку о том, понравился ли этот инструмент и т. п. &lt;img alt="Wink" src="http://ecn.channel9.msdn.com/o9/content/images/emoticons/emotion-5.gif?v=c9" /&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Грядущие встречи&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Одной из вещей, о которых я сильно переживал с 2010 была возможность просматривать будущие встречи в следующие дни в панели задач «to-do».&lt;/p&gt;    &lt;p&gt;Очень странно, но в версии 2013 эта возможность исчезла, так что можно видеть только встречи текущего дня, что для большинства людей может и небольшая проблема, но если у вас встреча завтра в 6:30, а вы не видите ее сегодня, то можете ее и пропустить…&lt;img alt="Wink" src="http://ecn.channel9.msdn.com/o9/content/images/emoticons/emotion-5.gif?v=c9" /&gt;&lt;/p&gt;    &lt;p&gt;Для этого я ввел новую панель, привязанную к правому краю окна Outlook и показывающую список будущих встреч в заданный интервал дней. &lt;/p&gt;    &lt;p&gt;&lt;img title="image" border="0" alt="image" src="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5B3%5D-97.png" width="285" height="834" /&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Множество календарей&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Очень популярным запросом является поддержка многих календарей и теперь встречи, показанные в панели, будут выбираться из настроенного списка календарей. На сегодняшний день лишь такие календари из раздела «Мои календари» будут показываться, и еще есть проблемы с таймаутом для учетных записей типа «public folders». &lt;/p&gt;    &lt;p&gt;Кроме того, они будут выводиться одинаковым шрифтом и цветом, поэтому пришлите мне предложения, как лучше выводить их, так как я полагаю, что чувства могут быть обмануты цветовыми категориями.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Оповещения о письмах&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Другая вещь, которая, по моему мнению, действительно расстраивает, это новая система оповещения о пришедших письмах в Outlook 2013. Он лишь показывает сводку по письму, и вы можете только кликнуть по ней, чтобы открыть письмо или пропустить предупреждение.&lt;/p&gt;    &lt;p&gt;В предыдущих версиях также можно было сразу из оповещения уничтожить письмо (прощай, спам!) или пометить флагом, поэтому именно это я реализовал здесь: &lt;/p&gt;    &lt;p&gt;&lt;img title="image" border="0" alt="image" src="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5B6%5D-73.png" width="459" height="219" /&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Встречи посредством &lt;/b&gt;&lt;b&gt;Email&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Новой возможностью стало создание встреч путем перетаскивания электронных писем на день календаря. При этом используются все получатели выбранного сообщения, а текст встречи образуется из тела письма и темы сообщения.&lt;/p&gt;    &lt;p&gt;По умолчанию встреча создается в указанный день, используя текущее время, округленное до следующей четверти часа. &lt;/p&gt;    &lt;p&gt;...&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Я упоминал исходники? Конечно!&lt;/p&gt;  &lt;p&gt;Вот снимок:&lt;/p&gt;  &lt;p&gt;&lt;img title="image" border="0" alt="image" src="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5B9%5D-44.png" width="500" height="269" /&gt;&lt;/p&gt;  &lt;p&gt;Итак, два дела в один день. &lt;img alt="Smiley" src="http://ecn.channel9.msdn.com/o9/content/images/emoticons/emotion-1.gif?v=c9" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10484421" width="1" height="1"&gt;</description></item><item><title>Орфографические ошибки в проектах? Проверка орфографии в Visual Studio (с исходником)</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/09/19/misspelled-strings-in-your-projects-visual-studio-spell-checker-with-source-too.aspx</link><pubDate>Thu, 19 Sep 2013 08:18:59 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10450400</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10450400</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/09/19/misspelled-strings-in-your-projects-visual-studio-spell-checker-with-source-too.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшним проектом Эрика Вудрафа (Eric Woodruff) я заинтересовался по двум причинам. Это не просто удовольствие для удовольствия, но то, что помогает сделать мою повседневную жизнь лучше и, конечно же, возможность увидеть код…&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;a href="https://vsspellchecker.codeplex.com/"&gt;Модуль проверки орфографии в Visual Studio &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;&lt;b&gt;Добро пожаловать в проект проверки орфографии &lt;/b&gt;&lt;b&gt;Visual&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Studio&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Этот проект представляет собой расширение редактора Visual Studio, проверяющее правописание комментариев, строковых переменных и неформатированного текста по мере его набора или интерактивно в окне инструмента. Он базируется на расширении модуля правописания, первоначально созданном Ноамом Ричардсом (Noah Richards), Романом Головиным (Roman Golovin) и Михаэлем Лехенбауэром (Michael Lehenbauer).&lt;/p&gt;    &lt;p&gt;Их версия была расширена в следующих направлениях:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;Для проверки орфографии используется NHunSpell. Поэтому можно добавлять пользовательские словари на разных языках. &lt;/li&gt;      &lt;li&gt;Добавлена возможность проверки внутреннего текста XML-элементов, а также значений определенных атрибутов. &lt;/li&gt;      &lt;li&gt;Добавлена поддержка замены сразу всех случаев ошибки с помощью контекстного меню смарт-тегов (удерживайте клавишу Ctrl при выборе заменяющего слова). &lt;/li&gt;      &lt;li&gt;В контекстное меню смарт-тегов добавлен пункт «Пропустить один раз», чтобы пропустить конкретный случай употребления неверного слова. &lt;/li&gt;      &lt;li&gt;Исправлены различные ошибки при пропуске текста, который не должен проверяться, и корректной разбивке текста на слова при наличии в нем эскейп-последовательностей. &lt;/li&gt;      &lt;li&gt;Добавлено окно интерактивной проверки орфографии для нахождения и исправления ошибок в текущем файле. &lt;/li&gt;      &lt;li&gt;Добавлены некоторые новые опции проверки орфографии; все их можно посмотреть и настроить. Настраиваемые опции включают в себя:        &lt;ul&gt;         &lt;li&gt;Используемый по умолчанию язык проверки орфографии. &lt;/li&gt;          &lt;li&gt;Разрешение и запрещение проверки «на лету». &lt;/li&gt;          &lt;li&gt;Игнорирование слов с цифрами. &lt;/li&gt;          &lt;li&gt;Игнорирование слов, набранных всеми прописными буквами. &lt;/li&gt;          &lt;li&gt;Игнорирование слов, похожих на имена файлов и адреса электронной почты. &lt;/li&gt;          &lt;li&gt;Игнорирование слов, выглядящих как элементы XML в проверяемом тексте. &lt;/li&gt;          &lt;li&gt;Рассматривать подчеркивание, как разделитель. &lt;/li&gt;          &lt;li&gt;Задать список XML-элементов в которых содержимое должно игнорироваться при проверке XML-файлов. &lt;/li&gt;          &lt;li&gt;Задать список XML-атрибутов, значение которых должно проверяться при проверке XML-файлов. &lt;/li&gt;       &lt;/ul&gt;     &lt;/li&gt;   &lt;/ul&gt; &lt;/blockquote&gt;  &lt;p&gt;Расширение можно скачать прямо из &lt;a href="http://visualstudiogallery.msdn.microsoft.com/a23de100-31a1-405c-b4b7-d6be40c3dfff"&gt;Галереи Visual Studio&lt;/a&gt;. &lt;/p&gt;  &lt;p&gt;&lt;img title="clip_image002" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/0317.clip_5F00_image002_5F00_077922AD.png" width="629" height="385" /&gt;&lt;/p&gt;  &lt;p&gt;Вот снимок кода в действии:&lt;/p&gt;  &lt;p&gt;&lt;img title="clip_image004" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1106.clip_5F00_image004_5F00_0E1C0663.png" width="517" height="360" /&gt;&lt;/p&gt;  &lt;p&gt;Я раскопал опубликованные Эриком &lt;a href="http://vsspellchecker.codeplex.com/"&gt;исходники этого проекта&lt;/a&gt;. Там есть ряд уроков, которые мы можем усвоить …&lt;/p&gt;  &lt;p&gt;Вот снимок решения (которое у меня было собрано с первого раза…убедитесь, что прочитали readme.txt)&lt;/p&gt;  &lt;p&gt;&lt;img title="clip_image006" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5488.clip_5F00_image006_5F00_366B38B7.png" width="193" height="484" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10450400" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio/">Visual Studio</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Studio+extensibility/">Visual Studio extensibility</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Extensions/">Extensions</category></item><item><title>Последовательный порт не только для … «Как обмениваться информацией с микроконтроллером или другим последовательным устройством в VB.Net»</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/09/19/serial-isn-t-just-for-171-how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net-187.aspx</link><pubDate>Thu, 19 Sep 2013 05:58:15 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10450367</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10450367</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/09/19/serial-isn-t-just-for-171-how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net-187.aspx#comments</comments><description>&lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний проект Рида Кимбли (&lt;a href="http://social.technet.microsoft.com/wiki/327827/ProfileUrlRedirect.ashx"&gt;Reed Kimble&lt;/a&gt;) настолько относится к старой школе, что теперь это уже новая школа. Опыт использования последовательного порта был утрачен (вспомните свой последний компьютер, у которого был последовательный порт?) пока снова не возродился в связи с подъемом микроконтроллеров.&lt;/p&gt;  &lt;p&gt;И, фактически, он сделал это на VB, моей первой любви в разработке, что стало сахарной на глазурью на пирожном &lt;img title="clip_image002" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8078.clip_5F00_image002_5F00_2527C44E.png" width="24" height="26" /&gt;... &lt;/p&gt;  &lt;p&gt;&lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx"&gt;&lt;b&gt;Как обмениваться информацией с микроконтроллером или другим последовательным устройством в &lt;/b&gt;&lt;b&gt;VB&lt;/b&gt;&lt;b&gt;.&lt;/b&gt;&lt;b&gt;Net&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;&lt;b&gt;Введение&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;С современной дешевой электроникой и технологиями производства небольших партий обычный любитель электроники имеет доступ к изобилию мощных компактных &lt;a href="http://en.wikipedia.org/wiki/Microcontroller"&gt;микроконтроллеров&lt;/a&gt; (MCU) вместе с огромным ассортиментом периферийных устройств, и почти все они требуют наличия последовательного интерфейса RS-232 для связи с ПК. Доступность и простота использования системы VB.Net сделали ее популярной платформой для разработки небольших целевых приложений, предназначенных для настройки или обмена информацией с микроконтроллерами или устройствами на их основе. Однако очевидно, что выбор компонента SerialPort означает, что есть некоторые ловушки в использовании последовательного порта, и, хотя эти ловушки объяснены в документации, правильная реализация этого компонента по-прежнему может не даваться некоторым разработчикам. В этой статье предпринята попытка объяснить общее использование компонента SerialPort и предложить в качестве примера класс «SerialDevice», инкапсулирующий экземпляр компонента SerialPort вместе с данными и логикой, связанными с его использованием.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Содержание&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Working_Draft"&gt;Введение&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Microcontrollers_MCUs"&gt;Микроконтроллеры (MCU)&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Serial_Port_Pitfalls"&gt;Ловушки последовательного порта&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Using_the_SerialPort_Component"&gt;Использование компонента SerialPort&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#quot_SerialDevice_quot_Code_Sample"&gt;Пример кода «SerialDevice»&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Code_Description"&gt;Описание кода&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Usage_Example"&gt;Использование примера&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;· &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx#Summary"&gt;Резюме&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Микроконтроллеры&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;(&lt;/b&gt;&lt;b&gt;MCU&lt;/b&gt;&lt;b&gt;)&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Существует несколько самых популярных микроконтроллерных платформ для хобби и прототипирования, среди которых Arduino, &lt;a href="http://www.parallax.com/"&gt;BasicStamp&lt;/a&gt; и, из последнего, &lt;a href="http://mbed.org/"&gt;mBed&lt;/a&gt;. Также есть множество других. Обычно платформа содержит процессор с разрядностью от 8 до 32, некоторое количество флеш-памяти, используемой как хранилище, оперативную память, а также ряд периферийных устройств, таких как цифровые и аналоговые системы ввода-вывода, UART, шины I2C/SPI и т. п. Большинство из них не слишком дороги (&amp;lt; 100 долл. США) и вокруг них собираются обширные онлайновые сообщества, а также имеются общедоступные библиотеки кода. Эти устройства популярны как среди конструкторов электроники, так и энтузиастов, и, если вы прошли через введение и установку, то с ними довольно просто работать. &lt;/p&gt;    &lt;p&gt;Поскольку эти устройства популярны среди конструкторов электроники и энтузиастов и так как &lt;a href="http://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products#product-express-summary"&gt;Visual Basic.Net является бесплатным&lt;/a&gt;&lt;u&gt;, &lt;/u&gt;его легко использовать, и он обеспечивается поддержкой, естественно, что они будут пытаться писать VB-приложения для настройки и связи с микроконтроллерами, имея вначале небольшой или вовсе не имея опыта программирования. Обычно для таких приложений есть ряд ограничений – с микроконтроллером приходится связываться через последовательный порт (иногда через виртуальный последовательный USB-порт), а затем посылать и принимать немного байтов, представляющих команду с параметрами и результат ее выполнения. Иногда ответ представляет собой длинную последовательность байтов данных, требующих дальнейшей обработки, прежде чем сравнить простой результат, но в большинстве случаев результатом будет немного байтов, которые декодируются в статус или в требуемое значение. Благодаря сущности компонента SerialPort и его многопоточных событий, процесс отправления команды, чтения результата и его обработки не так интуитивны, как могут показаться сначала методы объекта SerialPort.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Подводные камни последовательного порта&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Использование объекта &lt;/b&gt;&lt;b&gt;SerialPort&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Пример кода «&lt;/b&gt;&lt;b&gt;SerialDevice&lt;/b&gt;&lt;b&gt;»&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В следующем примере кода определяется класс SerialDevice, включающий объект SerialPort и исполнитель Task? Вместе с функциональностью, обрисованной выше. Этот класс предназначен для обеспечения гибкости использования и может помочь в решении широкого класса задач – от улучшения производительности, до редизайна с целью реализации специфических возможностей. Сначала давайте бегло взглянем на код, а затем перейдем к его детальному разбору.&lt;/p&gt;    &lt;p&gt;&lt;img title="clip_image004" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5518.clip_5F00_image004_5F00_23E32B6F.png" width="543" height="455" /&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Описание кода&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Класс начинается с объявления объекта SerialPort, потокобезопасной очереди байт для использования в качестве первичного рабочего буфера данных, и наконец, объекта Task вместе со связанными CancellationTokenSource и ManualResetEvent, необходимыми для управления выполнением вторичных потоков… &lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Пример использования&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Общий сценарий при работе с MCU состоит в посылке команды для конфигурирования или опроса устройства. Многое встроенное ПО микроконтроллеров использует простой текстовый протокол с данными, передающимися в виде ASCII-текста и управляющими кодами, использующими символы форматирования ASCII. Обычно пользователю достаточно отслеживать появление одиночного символа, такого как Carriage Return (CR) или Line Feed (LF) или Zero (0), обозначающего конец ответа. С этой целью мы создадим простую программу, позволяющую собирать сообщения из символов, полученных от MCU.&lt;/p&gt;    &lt;p&gt;Следующий пример демонстрирует использование экземпляра SerialDevice в приложении Windows Forms. В примере используется RichTextBox в качестве консольного экрана, позволяющего пользователю печатать символы, которые будут передаваться MCU, подсоединенному к COM3 (символы не отображаются в RichTextBox по мере печати). Затем MCU просто отправляет эхом любой полученный символ назад в ПК. Делегат CheckMessageComplete ищет символ CR (13) для определения, когда сообщение закончено и делегат ProcessMessage отображает полное сообщение в RichTextBox. Таким образом программа накапливает символы в буфере пока не будет нажата клавиша Enter, и затем целая строка будет напечатана в RichTextBox. Не забывайте, что каждый байт проходит через MCU, прежде чем он попадет в буфер SerialDevice для отображения в RichTextBox.&lt;/p&gt;    &lt;p&gt;&lt;img title="clip_image006" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/2705.clip_5F00_image006_5F00_234748BA.png" width="503" height="455" /&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Резюме&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;В этой конструкции класс SerialDevice предлагает универсальную платформу для коммуникаций с MCU или другим последовательным устройством независимо от применяемого протокола передачи данных. Аналогичный дизайн можно использовать и в других более узких целях для эффективного анализа и обработки получаемых данных, основанных на особенностях протокола приложения. Таким образом, этот класс должен быть также пригоден для многих быстрого и простого конфигурирования MCU и утилит опроса.&lt;/p&gt;    &lt;p&gt;Также пример демонстрирует, как реализовать компонент SerialPort и как напрямую использовать основные процедуры обработки событий без инкапсуляции в класс «SerialDevice». Этот класс можно разобрать на составляющие компоненты, чтобы применить каждую концепцию в других проектах.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Если вы &lt;a href="http://social.technet.microsoft.com/wiki/contents/articles/17949.how-to-communicate-with-a-microcontroller-or-other-serial-device-in-vb-net.aspx"&gt;зайдете сюда&lt;/a&gt; и прочитаете всю статью, то поймете уникальность SerialPort.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10450367" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Visual+Basic/">Visual Basic</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Hardware/">Hardware</category></item><item><title>Играем с бактериями, виртуально, с помощью проекта BacteriaSimulation</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/08/21/playing-with-bacteria-virtually-with-the-bacteriasimulation-project.aspx</link><pubDate>Wed, 21 Aug 2013 16:48:39 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10443311</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10443311</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/08/21/playing-with-bacteria-virtually-with-the-bacteriasimulation-project.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Я обнаружил этот проект сегодня и, хотя к нему не было ни описания, ни документации, лишь рабочий код (а нам действительно нужно что-то еще? &lt;img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Улыбка" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3755.wlEmoticon_2D00_smile_5F00_2FBBBC3B.png" /&gt;), я полагаю, что действительно интересный проект. Похожий на современную версию игры «Жизнь».&lt;/p&gt;  &lt;p&gt;Также я обнаружил совершенно точно, что в нем имеется не только интерфейс настольного WPF, но также и Windows Phone 8.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://bact.codeplex.com/"&gt;&lt;b&gt;BacteriaSimulation&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;Модельная среда для программных бактерий. &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Вот снимок моего экрана с запущенной программой.&lt;/p&gt;  &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5040.image_5F00_62AB4CA2.png" width="524" height="290" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7723.image_5F00_5FB5E7EF.png" width="223" height="368" /&gt;&lt;/p&gt;  &lt;p&gt;Просто вы добавляете зеленых бактерий, и они поедаются красными. У красных короткий жизненный цикл, поэтому они должны часто питаться. Также красные «охотятся» на зеленых, и если получают достаточно еды, производят потомство. Зеленые также «убегают» от красных. &lt;/p&gt;  &lt;p&gt;Вы можете подгонять некоторые настройки для обоих типов бактерий…&lt;/p&gt;  &lt;p&gt;И хотя наука, лежащая за всем этим, выше моего понимания, с этим довольно забавно играть. Короче, я потратил много времени, играя с нею, вместо написания данного поста. &lt;img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Улыбка" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3755.wlEmoticon_2D00_smile_5F00_2FBBBC3B.png" /&gt;&lt;/p&gt;  &lt;p&gt;Вот снимок решения:&lt;/p&gt;  &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4478.image_5F00_7694B96B.png" width="224" height="388" /&gt;&lt;/p&gt;  &lt;p&gt;Хотя этот проект не совсем то, что вы используете в своем следующем приложении (хотя, как знать…) он интересен и забавен.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10443311" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2300_/">C#</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Windows+Phone+8/">Windows Phone 8</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/biomedical/">biomedical</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/biology/">biology</category></item><item><title>Машина c машиной говорит … с помощью библиотеки MQTT</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/08/07/machine-2-machine-with-a-mqtt-net-library.aspx</link><pubDate>Wed, 07 Aug 2013 12:50:09 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10439988</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>1</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10439988</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/08/07/machine-2-machine-with-a-mqtt-net-library.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Сегодняшний проект пришел от Паоло Патиерно (Paolo Patierno), помогающего развивать Интернет вещей, мир общающихся машин…&lt;/p&gt;  &lt;p&gt;&lt;a href="https://m2mqtt.codeplex.com/"&gt;&lt;b&gt;Клиентская библиотека &lt;/b&gt;&lt;b&gt;MQTT &lt;/b&gt;&lt;b&gt;для межмашинных коммуникаций&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;M2Mqtt – это MQTT-клиент, доступный на всех платформах .Net (.Net Framework, .Net Compact Framework and .Net Micro Framework), и предназначенный для коммуникаций M2M.&lt;/p&gt;    &lt;p&gt;Полную информацию о протоколе MQTT можно найти на официальном сайте http://mqtt.org/.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://mqtt.org/"&gt;&lt;b&gt;Транспорт телеметрии &lt;/b&gt;&lt;b&gt;MQ&lt;/b&gt;&lt;b&gt; (&lt;/b&gt;&lt;b&gt;mqtt&lt;/b&gt;&lt;b&gt;.&lt;/b&gt;&lt;b&gt;org&lt;/b&gt;&lt;b&gt;)&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;MQTT – это протокол связи «машина-машина» (M2M) Интернета вещей. Он разработан как очень легкий транспорт сообщений типа «опубликовать/подписаться». Протокол полезен для соединений с удаленными местоположениями, где требуется небольшой фрагмент кода или где нормальная сетевая полоса – премия. Например, он используется при общении сенсоров с брокером через спутниковый канал, в случайных коммутируемых соединениях с поставщиками услуг здравоохранения и в широком спектре задач домашней автоматизации и малых устройствах. Также он идеален для мобильных приложений из-за небольшого размера, малого потребления энергии, минимизированных пакетов данных и эффективного распределения информации среди одного или нескольких приемников.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://www.embedded101.com/Blogs/PaoloPatierno/tabid/106/entryid/332/MQTT-and-Net-Micro-Framework-with-Netduino-Plus-board-a-simple-alarm-system.aspx"&gt;&lt;b&gt;MQTT&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;и .&lt;/b&gt;&lt;b&gt;Net&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Micro&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Framework&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;с платой &lt;/b&gt;&lt;b&gt;Netduino&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Plus&lt;/b&gt;&lt;b&gt;: простая система предупреждения!&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;С тех пор как я загрузил свой компактный клиент MQTT .Net Framework (Desktop, Compact и Micro) на CodePlex, я никогда не публиковал простого примера, расходуя время для ответов на вопросы. &lt;/p&gt;    &lt;p&gt;В этом сообщении мы рассмотрим, как реализовать простую систему предупреждения из двух контроллеров Netduino Plus, подсоединенных к сети. При этом первый контроллер регистрирует движение с помощью датчика PIR (Passive InfraRed – пассивный инфракрасный датчик), а второй получает уведомление о событии (в нашем случае выводит сообщение на консоль Debug). Очевидно, что второй контроллер можно просто заменить на смартфон, через который можно получать уведомления о вторжении в реальном времени. &lt;/p&gt;    &lt;p&gt;Что касается брокера, то это просто RSMB (Really Small Message Broker – действительно маленький брокер сообщений) от IBM, который можно использовать бесплатно для некоммерческого применения и скачать &lt;a href="https://www.ibm.com/developerworks/community/groups/service/html/communityview?communityUuid=d5bedadd-e46f-4c97-af89-22d65ffee070"&gt;отсюда&lt;/a&gt;. Его не требуется устанавливать, но в случае Windows есть простой исполняемый файл, который надо запустить, чтобы получить брокер и прослушивание MQTT-порта по умолчанию (1883). В нашем примере, он работает на моем ПК, который выступает, в известной мере, сервером.&lt;/p&gt;    &lt;p&gt;В контролере запущено простое приложение, работающее частью детектора: &lt;/p&gt;    &lt;p&gt;Класс &lt;i&gt;Pir&lt;/i&gt; используется для датчика (см. &lt;a href="http://uplibrary.codeplex.com/"&gt;uPLibrary&lt;/a&gt; на CodePlex), генерирующего событие при регистрации движения. С помощью класса &lt;i&gt;MqttClient&lt;/i&gt;&lt;i&gt; &lt;/i&gt;устанавливается соединение&lt;i&gt; &lt;/i&gt;с брокером и публикуется сообщение в теме “alarm” (предупреждение) для отчета о срабатывании датчика. &lt;/p&gt;    &lt;p&gt;Следующее приложение получает отчеты:&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;Действуя через &lt;i&gt;MqttClient&lt;/i&gt;&lt;i&gt;, &lt;/i&gt;оно не делает ничего кроме регистрации&lt;i&gt; &lt;/i&gt;темы «alarm», через которую получает предупреждения посредством сообщения от отправителя через брокера.&lt;/p&gt;    &lt;p&gt;По существу, мы разработали простую систему Push-уведомлений, которая несомненно может использоваться через Интернет, возможно, с применением роли Worker Windows Azure в качестве брокера, поскольку не существует брокера, написанного целико�� на C#.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Только не создавайте SkyNet, пожалуйста…&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image002" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1072.clip_5F00_image002_5F00_1954A9E7.png" width="28" height="30" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10439988" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/-NET+Microframework/">.NET Microframework</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/C_2300_/">C#</category></item><item><title>Увеличим ваше знание Windows с помощью WintellectNOW</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/07/11/increasing-your-windows-intellect-now-with-wintellectnow.aspx</link><pubDate>Thu, 11 Jul 2013 08:09:18 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10433314</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10433314</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/07/11/increasing-your-windows-intellect-now-with-wintellectnow.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Знаете, как я люблю сосредотачиваться на вещах, которые помогают вам помогать себе? Учат «ловить рыбу» и тому подобное?&lt;/p&gt;  &lt;p&gt;Вы же слышали о Wintellect, не правда ли? Эти люди помогают Microsoft создавать очень клевые штуки. Также они помогают и натаскивают основные корпорации в разработке с помощью технологий Microsoft и для них. Ведь все вы слышали о Джоне Роббинсе, Джеффри Рихтере, Марке Данне и Джеффе Просисе (это лишь некоторые имена)?&lt;/p&gt;  &lt;p&gt;И теперь Wintellect поделится всеми наработками с вами!&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.wintellect.com/blogs/jprosise/introducing-wintellectnow"&gt;&lt;b&gt;Введение в WintellectNOW&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;...&lt;a href="http://www.wintellectnow.com/"&gt;WintellectNOW&lt;/a&gt; – новый обучающий сервис по требованию с тем же содержимым, которое мы предоставляем Microsoft и другим крупным заказчикам, доступный в любом месте и в любое время.&lt;/p&gt;    &lt;p&gt;Джеффри Рихтер и команда талантливых сотрудников Wintellect разработала и написала ПО, которое продолжает ежедневно улучшаться. Например, мы спрямили процесс регистрации с момента запуска и у нас имеются интересные возможности поиска в библиотеке, протестированные и готовые к развертыванию на производстве. Видео размещены в службе хостинга, а все используемые сайтом данные, включая метаданные для видео и информацию о регистрации, хранятся в Azure. У нас действительно есть замечательные вещи в загашнике, которые облегчают корпоративным инструкторам введение людей в должность и сбор метрик, касающихся ее использования, и, конечно, мы предлагаем значительные скидки корпоративным клиентам. Короче, мы затратили много времени и денег на первую версию ПО и сейчас уже работаем над следующей версией. Мы не можем ждать, когда публика соблаговолит заметить некоторые вещи, которые мы запланировали.&lt;/p&gt;    &lt;p&gt;Моей основной работой при запуске WintellectNOW была мобилизация авторов и организация процесса редактирования, сбора и публикации материалов. Мне посчастливилось найти талантливых авторов, верящих в наше дело и готовых вложить тяжкий труд в подготовку запуска. Ежедневное одиночное сидение в комнате и надиктовывание в микрофон не настолько захватывающее занятие, как выступление перед классом с 50 умными разработчиками или на конференции перед аудиторией в 500 человек, но воодушевляет мысль о том, что конечный результат будет доступен всему миру. В этом месяце мы опубликовали более 25 сессий и представили несколько новых авторов. После этого …, ждите и смотрите. У нас в запасе есть несколько сюрпризов, и я не хочу их портить!&lt;/p&gt;    &lt;p&gt;Большинство сессий, доступных по программе WintellectNOW, требуют платной подписки, но мы также постарались обеспечить и свободно доступный контент. Сегодня вы можете смотреть бесплатно следующие видео:&lt;/p&gt;    &lt;ul&gt;     &lt;li&gt;Джон Роббинс «&lt;a href="http://www.wintellectnow.com/Videos/Watch/intellitrace"&gt;Погружение в IntelliTrace&lt;/a&gt;», лекция, пользующаяся широкой популярностью у наших корпоративных клиентов &lt;/li&gt;      &lt;li&gt;«&lt;a href="http://www.wintellectnow.com/Videos/Watch/getting-started-with-windows-azure"&gt;Всеобъемлющее введение в Azure&lt;/a&gt;» Джеффри Рихтера &lt;/li&gt;      &lt;li&gt;Мое введение в «Написание плагинов jQuery» &lt;/li&gt;   &lt;/ul&gt;    &lt;p&gt;Мы опубликуем этим летом еще бесплатные видео и будем периодически менять существующие видео между платным и бесплатным наборами. Так что, держите глаза широко открытыми, а не то пропустите что-нибудь интересное…&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Итак, бесплатные курсы… Где? Зайдите в &lt;a href="http://www.wintellectnow.com/Videos/Index"&gt;библиотеку&lt;/a&gt; и отсортируйте по колонке Plan.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.wintellectnow.com/Videos/Index"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image002" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5342.clip_5F00_image002_5F00_3DAFCA0A.png" width="1284" height="458" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Я тихо смеялся, когда писал это. Вы помните место, где Джефф говорит, что «мы опубликуем этим летом еще бесплатные видео…». Когда я зашел в библиотеку несколько минут назад, там было три бесплатных видео. Когда я обновил страницу перед тем, как сделать снимок экрана, их стало четыре…&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image004" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3247.clip_5F00_image004_5F00_5AF1A9AF.png" width="28" height="30" /&gt;&lt;/p&gt;  &lt;p&gt;Что же вы получили? Вот снимок лекции Джона «&lt;a href="http://www.wintellectnow.com/Videos/Watch/intellitrace"&gt;Погружение в IntelliTrace&lt;/a&gt;»:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.wintellectnow.com/Videos/Watch/intellitrace"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image006" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5732.clip_5F00_image006_5F00_39920413.png" width="654" height="340" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.wintellectnow.com/Videos/Watch/intellitrace"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image008" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6175.clip_5F00_image008_5F00_6E4E97E9.png" width="434" height="484" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Теперь начинайте винтеллектить! &lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image004[1]" border="0" alt="clip_image004[1]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/3326.clip_5F00_image0041_5F00_2D8BFFE0.png" width="28" height="30" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10433314" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Training/">Training</category><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Wintellect/">Wintellect</category></item><item><title>Самодельное лазерное стрельбище</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/06/03/creating-your-own-dyi-laser-shooting-range.aspx</link><pubDate>Mon, 03 Jun 2013 13:50:56 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10423100</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10423100</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/06/03/creating-your-own-dyi-laser-shooting-range.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Заходите, здесь чертовы лазеры!&lt;/p&gt;  &lt;p&gt;&lt;a href="http://kuchenzeit.wordpress.com/2013/05/22/diy-laser-shooting-range/"&gt;&lt;b&gt;Самодельное лазерное стрельбище&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;Возможно это первое сообщение из серии (надеюсь) постов “не по теме”, посвященных интересным вещам, которые я сделал и которыми хочу поделиться. Это побочный проект, который мы выполнили пару лет назад, работая над экранами с мультитач и инфракрасной технологией.&lt;/p&gt;    &lt;p&gt;Сначала мы встроили инфракрасный лазер с длиной волны 780 нм в пластиковый воздушный пистолет MP5. Лазер великолепно вписался в ствол (Рис. 1а) Две полуторавольтовые батареи были помещены в рукоятку (Рис. 1б) и соединены с конденсатором (&lt;i&gt;Я проверю его емкость и обновлю этот пост&lt;/i&gt;), выключателем и лазером. &lt;/p&gt;    &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image002" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/4010.clip_5F00_image002_5F00_475BB65B.png" width="629" height="352" /&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;Конденсатор используется для предотвращения непрерывного излучения лазера, главным образом, как мера предосторожности.&lt;/p&gt;    &lt;p&gt;Собранный лазерный пистолет затем использовался для создания миллисекундных вспышек света. &lt;/p&gt;    &lt;p&gt;Чтобы следить за инфракрасным пятном на проектируемой поверхности мы использовали модифицированную веб-камеру &lt;i&gt;Hercules&lt;/i&gt;&lt;i&gt; &lt;/i&gt;&lt;i&gt;Classic&lt;/i&gt;&lt;i&gt; &lt;/i&gt;&lt;i&gt;Silver&lt;/i&gt;&lt;i&gt;. &lt;/i&gt;Это очень недорогая модель (только 320×240 пикселов), но она оснащается линзами M12 с встроенным инфракрасным фильтром, который легко заменить доработанными линзами M12 без фильтра, прозрачными для инфракрасных лучей. Другая причина, почему мы использовали &lt;i&gt;Hercules&lt;/i&gt;&lt;i&gt; &lt;/i&gt;&lt;i&gt;Classic&lt;/i&gt;&lt;i&gt; &lt;/i&gt;&lt;i&gt;Silver&lt;/i&gt;&lt;i&gt;, &lt;/i&gt;– она оказалась под руками у моего дедушки. &lt;/p&gt;    &lt;p&gt;Пакеты &lt;a href="http://ccv.nuigroup.com/"&gt;Community Core Vision&lt;/a&gt; (CCV) и &lt;a href="http://multitouchvista.codeplex.com/"&gt;MultiTouchVista&lt;/a&gt; (MTV) были использованы для организации ввода в Windows инфракрасного пятна. (Замечание. В Windows 8 я рекомендую применять мой пакет &lt;a href="http://touchinjector.codeplex.com/"&gt;TouchInjector&lt;/a&gt; вместо MTV, поскольку он более отзывчивый и легко настраивается).&lt;/p&gt;    &lt;p&gt;После калибровки размеров проекционного экрана в CCV (используя один инфракрасный светодиод или другой источник инфракрасного света) мы получили возможность стрелять по щелчкам мыши на экране из лазера MP5.&lt;/p&gt;    &lt;p&gt;Кто-то может предложить сыграть в Moorhuhn, но стоит заметить, что игровое пространство больше экрана и требуется прокрутка (по крайней мере, если вы хотите поразить все цели). Для этого я написал WPF-приложение «LaserRange» (&lt;a href="http://kuchenzeit.wordpress.com/2013/05/22/diy-laser-shooting-range/"&gt;приложение и исходники здесь&lt;/a&gt;, нужно .NET 4.5), которое применяется для стрельбы по синим дискам меняющегося размера. От точности и времени реакции зависит счет и, конечно, есть звуковой эффект лазерных выстрелов.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Приложение очень простое, но постойте, мы здесь не приложение обсуждаем, а лазеры!&lt;/p&gt;  &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image004" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/7870.clip_5F00_image004_5F00_42097D52.png" width="629" height="342" /&gt;&lt;/p&gt;  &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="clip_image006" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/8816.clip_5F00_image006_5F00_2E7C1DB1.png" width="629" height="342" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10423100" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Lasers/">Lasers</category></item><item><title>NuPattern – инструмент создания инструментов… Не повторяйте руководство, автоматизируйте!</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/06/01/nupattern-is-a-tool-that-helps-you-build-tools-don-t-repeat-manual-automate.aspx</link><pubDate>Fri, 31 May 2013 20:52:00 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10428690</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10428690</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/06/01/nupattern-is-a-tool-that-helps-you-build-tools-don-t-repeat-manual-automate.aspx#comments</comments><description>&lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Отлично, хватит про создание приложений и тому подобное. Как насчет инструментария и помощи в создании инструментов для ваших любимых инструментов?&lt;/p&gt;  &lt;p&gt;&lt;a href="https://nupattern.codeplex.com/"&gt;&lt;b&gt;NuPattern&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;&lt;b&gt;Что такое &lt;/b&gt;&lt;b&gt;NuPattern&lt;/b&gt;&lt;b&gt;?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1526.image_5F00_6D3A13A8.png" width="504" height="311" /&gt;&lt;/p&gt;    &lt;p&gt;NuPattern – это платформа и инструментарий для создания собственных инструментальных средств в Visual Studio.&lt;/p&gt;    &lt;p&gt;Потратьте шесть минут, чтобы посмотреть видео (на англ. языке) и понять, что же это такое и какие выгоды NuPattern может принести вам:&lt;/p&gt;    &lt;p&gt;&lt;object width="425" height="355"&gt;&lt;param name="movie" value="http://www.youtube.com/v/pHaBP2vQLt0&amp;amp;hl=en"&gt;&lt;/param&gt;&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/pHaBP2vQLt0&amp;amp;hl=en" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt;    &lt;p&gt;До настоящего времени вы, возможно привыкли видеть инструменты и расширения для Visual Studio разных производителей, некоторые вам нравились, другие представляли небольшую ценность для вашего проекта, кроме как на начальной стадии. Причина в том, что все они достаточно универсального назначения. &lt;/p&gt;    &lt;p&gt;Но рассматривали ли вы когда-нибудь возможность использования и создания собственных конкретных инструментов или утилит других разработчиков, которые вы хотели бы использовать в собственных проектах? Ваша организация или сообщество создает приложения с использованием согласованных стандартов кодирования, структуры проектов и архитектурных правил. Возможно, ни один поставщик не в состоянии построить вам соответствующие инструменты. NuPattern – это новая платформа и инструментарий, которые позволят создавать свои собственные инструменты и средства автоматизации, отвечающие требованиям ваших проектов.&lt;/p&gt;    &lt;p&gt;Пытались когда-нибудь создать собственные инструменты и шаблоны в Visual Studio? Это невероятно трудно, и мало кто в мире может позволить себе сделать это. Но не с NuPattern. Просто определитесь с моделью, как вы понимаете возможности своей программы, и дополните ее шаблонами, автоматизацией и наглядными руководствами. Затем NuPattern автоматически сгенерирует новое расширение для Visual Studio, которое можно поместить в галерею и разделить с другими, таким образом, вы и сообщество получите инструмент, о котором всегда мечтали.&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Новый&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;подход&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Построение «Рабочих наборов шаблонов» – новый подход к повышению продуктивности и согласованности проектов разработки и развертывания ПО. &lt;a href="https://nupattern.codeplex.com/wikipage?title=New%20Approach&amp;amp;referringTitle=Home"&gt;Подробнее…&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;Где получить пакет?&lt;/p&gt;    &lt;p&gt;&lt;b&gt;С этого сайта &lt;/b&gt;можно скачать&lt;b&gt; &lt;/b&gt;и установить последнюю версию инструментария с закладки «&lt;a href="http://vspat.codeplex.com/releases"&gt;Downloads&lt;/a&gt;&lt;u&gt;».&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;В &lt;/b&gt;&lt;b&gt;Visual&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Studio&lt;/b&gt;&lt;b&gt; &lt;/b&gt;можно поискать, скачать и установить инструментарий из&lt;b&gt; &lt;/b&gt;&lt;a href="http://visualstudiogallery.msdn.microsoft.com/332f060b-2352-41c9-b8dc-95d8ad21329b"&gt;Visual Studio Gallery&lt;/a&gt;&lt;u&gt;, которую можно найти на закладке &lt;/u&gt;«Online Gallery» менеджера расширений Visual Studio. &lt;b&gt;&lt;/b&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="https://nupattern.codeplex.com/wikipage?title=What%20is%20NuPattern%3f&amp;amp;referringTitle=Documentation"&gt;&lt;b&gt;Что такое &lt;/b&gt;&lt;b&gt;NuPattern&lt;/b&gt;&lt;b&gt;?&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;Название NuPattern относится к технологии создания и запуска «Рабочих наборов шаблонов». Конкретнее, это коллекция расширений Visual Studio, которые все вместе концентрируют опыт создания и использования наборов шаблонов.&lt;/p&gt;    &lt;p&gt;Компоненты NuPattern в Visual Studio Extension Manager.&lt;/p&gt;    &lt;p&gt;Далее следует список расширений Visual Studio (VSIXes), которые можно установить и управлять через Visual Studio:&lt;/p&gt;    &lt;p&gt;· &lt;b&gt;NuPattern&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Toolkit&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Manager&lt;/b&gt; – Это расширение обеспечивает платформу автоматизации, инструменты, окна, редакторы для загрузки и запуска набора шаблонов в Visual Studio.&lt;/p&gt;    &lt;p&gt;o Он предоставляет постоянное хранилище экземпляров шаблонов, содержащихся в наборе (называемых элементами решений). &lt;/p&gt;    &lt;p&gt;o Он предоставляет службы Studio и MEF API для манипулирования с наборами шаблонов и элементами решений. &lt;/p&gt;    &lt;p&gt;o Также он обеспечивает окно инструмента «Solution Builder» для показа элементов решений и все элементы пользовательского интерфейса для работы с установленным набором шаблонов. &lt;/p&gt;    &lt;p&gt;· &lt;b&gt;NuPattern&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Toolkit&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Builder&lt;/b&gt; – Это расширение предоставляет шаблоны проектов, конструкторы моделей, автоматизацию и расширенное руководство для создания проектов «Pattern Toolkit» в Visual Studio.&lt;/p&gt;    &lt;p&gt;o Это расширение само из набора шаблонов и, таким образом, применяется через окно «Solution Builder». &lt;/p&gt;    &lt;p&gt;o Оно предоставляет доступ к элементам решений в «Solution Builder» и руководство в окне «Guidance Explorer» (Проводник руководств), которое проведет через процесс создания собственного проекта набора шаблонов. &lt;/p&gt;    &lt;p&gt;o Когда набор шаблонов создан, расширение генерирует файл *.VSIX, который устанавливается в Visual Studio, чтобы шаблоном можно было пользоваться. &lt;/p&gt;    &lt;p&gt;· &lt;b&gt;Библиотека &lt;/b&gt;&lt;b&gt;NuPattern&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Toolkit&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;–&lt;/b&gt; Это расширение предоставляет шаблон проекта, шаблоны элементов и автоматизацию для создания собственного механизма автоматизации в пользовательскх проектах «Набора шаблонов».&lt;/p&gt;    &lt;p&gt;o Это расширение само является «Набором шаблонов» и поэтому применяется через окно «Solution Builder». &lt;/p&gt;    &lt;p&gt;o Оно интегрируется с расширением «Pattern Toolkit Builder» и дополняет его, предоставляя проект «Automation Library» (Библиотека автоматизации). &lt;/p&gt;    &lt;p&gt;· &lt;b&gt;Практические лабораторные работы по &lt;/b&gt;&lt;b&gt;NuPattern&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Toolkit&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;Builder&lt;/b&gt;&lt;b&gt; &lt;/b&gt;&lt;b&gt;–&lt;/b&gt; Это расширение содержит практические лабораторные работы, детально объясняющие процесс создания первого проекта «'Pattern Toolkit».&lt;/p&gt;    &lt;p&gt;o Расширение содержит руководство и средства автоматизации для создания проекта «Pattern Toolkit». &lt;/p&gt;    &lt;p&gt;o Это рекомендуемая стартовая точка для новичков «Pattern Toolkit». &lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;Это метаинформация, помогающая начать создание инструментов…&lt;/p&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;&lt;a href="https://nupattern.codeplex.com/wikipage?title=Getting%20Started&amp;amp;referringTitle=Documentation"&gt;&lt;b&gt;Начало работы&lt;/b&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Здесь вы научитесь тому, как начать создание собственных наборов шаблонов.&lt;/p&gt;    &lt;p&gt;&lt;i&gt;Если вы уже установили &lt;/i&gt;&lt;i&gt;uPattern&lt;/i&gt;&lt;i&gt; и создали набор с пред��дущей версией 1.2.19.0 &lt;/i&gt;&lt;i&gt;VSPAT&lt;/i&gt;&lt;i&gt;, то необходимо перевести старые наборы инструментов на &lt;/i&gt;&lt;i&gt;NuPattern&lt;/i&gt;&lt;i&gt;. Пожалуйста, ознакомьтесь с примечаниями к выпуску &lt;/i&gt;&lt;a href="https://nupattern.codeplex.com/releases/view/94069"&gt;&lt;i&gt;NuPattern&lt;/i&gt;&lt;i&gt; 1.3.20.0&lt;/i&gt;&lt;/a&gt;&lt;i&gt;&lt;u&gt;, &lt;/u&gt;&lt;/i&gt;&lt;i&gt;чтобы узнать, как это можно сделать. Для сборок наборов шаблонов последней версии &lt;/i&gt;&lt;i&gt;NuPattern&lt;/i&gt;&lt;i&gt; (1.3.20.0 или более поздней) придется проделать небольшую работу по миграции вашего проекта, поэтому читайте примечаниями к текущему выпуску &lt;/i&gt;&lt;i&gt;NuPattern&lt;/i&gt;&lt;i&gt;, который устанавливаете. &lt;/i&gt;&lt;/p&gt;    &lt;p&gt;Если вы никогда ранее не собирали набор шаблонов с NuPattern, то мы настоятельно рекомендуем познакомиться с тем, что представляет собой NuPattern, установив и пройдя практические работы с помощью руководства, включенного в последний выпуск &lt;a href="https://nupattern.codeplex.com/releases/view/101714"&gt;NuPattern 1.3.21.0&lt;/a&gt;&lt;u&gt;.&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;&lt;b&gt;Почему практические работы&lt;/b&gt;&lt;b&gt;?&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;Практические работы проведут вас через процесс создания первого проекта набора шаблонов, дадут краткий обзор некоторых базовых возможностей конструирования, сборки и упаковки учебного набора. Они предоставят хорошее введение и некоторые идеи о том, как создать собственный набор инструментов. Проигнорировав практические работы, можно не до конца разобраться, как создать первый проект набора шаблонов и что они делают. &lt;/p&gt;    &lt;p&gt;Если вы установили NuPattern и практические работы (Hands-On Labs, в составе пакета или отдельно), вы можете начать прямо сейчас. Переходите к ссылке &lt;a href="https://nupattern.codeplex.com/wikipage?title=Getting%20Started&amp;amp;referringTitle=Documentation#startlab"&gt;Start The Lab&lt;/a&gt;&lt;u&gt;.&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;img title="Creating the Hands-On Labs project" alt="Creating the Hands-On Labs project" src="http://download-codeplex.sec.s-msft.com/Download?ProjectName=nupattern&amp;amp;DownloadId=658247" /&gt;&lt;/p&gt;    &lt;p&gt;&lt;img title="image" border="0" alt="image" src="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5B5%5D-73.png" width="465" height="364" /&gt;&lt;/p&gt;    &lt;p&gt;&lt;img title="image" border="0" alt="image" src="http://files.channel9.msdn.com/wlwimages/ae054c0b4d7b402ab1239e6800c0220f/image%5B8%5D-68.png" width="500" height="350" /&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;И, что лучше всего, все исходные тексты для всех компонентов NuPattern также доступны…&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10428690" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Extensions/">Extensions</category></item><item><title>Тук, тук… Создание дверного сигнализатора на Arduino</title><link>http://blogs.msdn.com/b/rucoding4fun/archive/2013/05/20/knock-knock-building-an-arduino-door-entry-alarm.aspx</link><pubDate>Mon, 20 May 2013 19:10:52 GMT</pubDate><guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10420110</guid><dc:creator>Russian MSDN</dc:creator><slash:comments>0</slash:comments><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">http://blogs.msdn.com/b/rucoding4fun/rsscomments.aspx?WeblogPostID=10420110</wfw:commentRss><comments>http://blogs.msdn.com/b/rucoding4fun/archive/2013/05/20/knock-knock-building-an-arduino-door-entry-alarm.aspx#comments</comments><description>&lt;h3&gt;&amp;#160;&lt;/h3&gt;  &lt;p&gt;&lt;a href="http://channel9.msdn.com/Niners/gduncan411"&gt;Грэг Дункан&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Настало время небольшого аппаратного хака (в хорошем смысле). Не просто вставь и работай, мы поговорим о макетных платах, проводах, Arduino и немного о кодировании.&lt;/p&gt;  &lt;p&gt;Ну, может быть это не крутой хакинг (совсем), но для не электронных парней, вроде меня, это так … &lt;img title="clip_image002" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1731.clip_5F00_image002_5F00_65F9DFE9.png" width="28" height="31" /&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h4&gt;&lt;a href="http://blogs.msdn.com/b/abhinaba/archive/2013/04/30/arduino-fun-door-entry-alarm.aspx"&gt;Развлечение с Arduino – дверной сигнализатор&lt;/a&gt;&lt;/h4&gt;  &lt;blockquote style="background-color: #f6f5e9"&gt;   &lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Physical_computing"&gt;Физические вычисления&lt;/a&gt; и «интернет вещей» – сверхзахватывающие области, развивающиеся прямо сейчас. Даже десятки лет назад можно было подключать датчики, удаленно получать данные от них и обрабатывать их. Чем отличается наше время? Тем, что мощный микроконтроллер неприлично дешев и у большинства из нас в кармане находится действительно мощное вычислительное устройство. Также сегодня не составляет труда беспроводные соединения и почти в каждом доме есть беспроводная сеть.&lt;/p&gt;    &lt;p&gt;Все вместе позволяет создавать действительно неотразимые и замечательные решения, где данные путешествуют от датчиков по беспроводным сетям в облако и затем в мобильный телефон, который мы носим с собой. В конечном итоге, я хотел создать умную дверь, чтобы, находясь на работе, получать оповещение, когда кто-то стучится в дверь нашего дома. Может быть, я смогу удаленно открыть дверь. Возможности бесконечны, но время ограничено, поэтому давайте посмотрим, чего я смогу достичь за разумное время.&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;h6&gt;Проект&lt;/h6&gt;    &lt;p&gt;&lt;img title="clip_image004" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/1373.clip_5F00_image004_5F00_12A299C3.png" width="309" height="275" /&gt;&lt;/p&gt;    &lt;p&gt;Я решил начать с создания простой сигнализации и узнать, сколько времени понадобиться на ее сборку. В колледже я делал нечто похожее, но без микропроцессора (на основе 555 микросхемы и инфракрасного фототранзистора) приличное время заняло соединение всех компонентов. Основная идея состоит в том, что на одной стороне двери будет располагаться источник света, а с другой – сенсор. Когда кто-то встает на линию между источником света и сенсором, последний преграждается и генерируется сигнал тревоги. &lt;/p&gt;    &lt;p&gt;Когда я собирал такую схему в колледже, я сделал ее надежной, используя пульсирующий (с фиксированной частотой) инфракрасный светодиод и инфракрасный сенсор. В текущем проекте я применил видимый свет и фоторезистор, который входил в набор.&lt;/p&gt;    &lt;p&gt;&lt;img title="clip_image006" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/5483.clip_5F00_image006_5F00_22CE61BC.png" width="346" height="459" /&gt;&lt;/p&gt;    &lt;p&gt;...&lt;/p&gt;    &lt;p&gt;&lt;img title="clip_image008" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-10-39-metablogapi/6472.clip_5F00_image008_5F00_3FE3E3F9.png" width="587" height="782" /&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;object width="425" height="355"&gt;&lt;param name="movie" value="http://www.youtube.com/v/16e_VQopQRc&amp;amp;hl=en"&gt;&lt;/param&gt;&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;&lt;embed src="http://www.youtube.com/v/16e_VQopQRc&amp;amp;hl=en" type="application/x-shockwave-flash" wmode="transparent" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt;  &lt;p&gt;Теперь, за работу!&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10420110" width="1" height="1"&gt;</description><category domain="http://blogs.msdn.com/b/rucoding4fun/archive/tags/Arduino/">Arduino</category></item></channel></rss>